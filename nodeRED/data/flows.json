[
    {
        "id": "a022e047ab61f60f",
        "type": "tab",
        "label": "Network Settings",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "069dc62ea2d41d4e",
        "type": "tab",
        "label": "NTP Settings",
        "disabled": false,
        "info": ""
    },
    {
        "id": "669f735997e8ccf8",
        "type": "tab",
        "label": "LED Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "82849c3263d0f5e0",
        "type": "tab",
        "label": "Smart Fan Control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e80c72b156706da5",
        "type": "tab",
        "label": "System Health",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e0bafcfefd943e69",
        "type": "tab",
        "label": "RTD Channels",
        "disabled": false,
        "info": ""
    },
    {
        "id": "158c0205302460dc",
        "type": "tab",
        "label": "4-20mA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a6149454b900d60",
        "type": "tab",
        "label": "0-10V",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "295a8801690aa9cf",
        "type": "tab",
        "label": "Thresholds",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "351987a7606fd47b",
        "type": "tab",
        "label": "Alerts",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "967a3cb71bb32019",
        "type": "tab",
        "label": "Trip Breaker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "71168aa934c4b91e",
        "type": "tab",
        "label": "Logging",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c3a08c57ae26863e",
        "type": "tab",
        "label": "WatchDog",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "df9b957e.a839f8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "5a051fab.6f842",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "97420292.ac5e6",
        "type": "redis-config",
        "name": "local",
        "options": "{}",
        "cluster": false,
        "optionsType": "json"
    },
    {
        "id": "ef790b5f.ecc138",
        "type": "redis-config",
        "name": "local",
        "options": "{}",
        "cluster": false,
        "optionsType": "json"
    },
    {
        "id": "64f96d737e69795c",
        "type": "redis-config",
        "name": "Local",
        "options": "{}",
        "cluster": false,
        "optionsType": "json"
    },
    {
        "id": "6346ce60.21241",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2bc67503.c7a16a",
        "type": "ui_tab",
        "name": "RTD",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "89b4b583.6e3708",
        "type": "ui_tab",
        "name": "RTD",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c02ffd94.fd5d",
        "type": "ui_group",
        "name": "TEMPERATURE1",
        "tab": "2bc67503.c7a16a",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6f0765f4.9250fc",
        "type": "ui_group",
        "name": "TEMPERATURE2",
        "tab": "2bc67503.c7a16a",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "be7ef222.edfca",
        "type": "ui_group",
        "name": "TEMPERATURE3",
        "tab": "2bc67503.c7a16a",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "14c1618c.5c7c2e",
        "type": "ui_group",
        "name": "TEMPERATURE4",
        "tab": "2bc67503.c7a16a",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "70974f6.af55ab",
        "type": "ui_group",
        "name": "TEMPERATURE1",
        "tab": "89b4b583.6e3708",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "de1a2bc8.de6ad8",
        "type": "ui_group",
        "name": "TEMPERATURE2",
        "tab": "89b4b583.6e3708",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4fe47b2e.9eacd4",
        "type": "ui_group",
        "name": "TEMPERATURE3",
        "tab": "89b4b583.6e3708",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "72b1f2e.a2e320c",
        "type": "ui_group",
        "name": "TEMPERATURE4",
        "tab": "89b4b583.6e3708",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6186cad3b7b9f625",
        "type": "function",
        "z": "a022e047ab61f60f",
        "name": "fetch ip and subnet",
        "func": "msg.payload = `ip addr ls eth0 | grep -oP '([0-9]{1,3}\\.){3}([0-9]{1,3})/[0-9]{1,2}'`\nmsg.topic = 'ipAddressAndSubnet'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            [
                "80ad7db57c9d45dc"
            ]
        ]
    },
    {
        "id": "80ad7db57c9d45dc",
        "type": "exec",
        "z": "a022e047ab61f60f",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "5921e5eeb49b7505"
            ],
            [
                "01c1e42bf0016008"
            ],
            []
        ]
    },
    {
        "id": "125aca927afef4f4",
        "type": "function",
        "z": "a022e047ab61f60f",
        "name": "fetch gateway",
        "func": "msg.payload = `ip route | grep default | grep -oP '([0-9]{1,3}\\.){3}([0-9]{1,3})' | head -n 1`\nmsg.topic = 'gateway'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 320,
        "wires": [
            [
                "80ad7db57c9d45dc"
            ]
        ]
    },
    {
        "id": "d1a2247af195a525",
        "type": "function",
        "z": "a022e047ab61f60f",
        "name": "fetch DNS",
        "func": "msg.payload = `resolvectl status eth0 | grep \"DNS Servers\" -A 1 | grep -P '^(\\\\s*DNS Servers:[\\\\s0-9\\\\.]*|[^:]*)$' | grep -oP '([0-9]{1,3}\\\\.){3}([0-9]{1,3})'`\nmsg.topic = 'dns'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 240,
        "wires": [
            [
                "80ad7db57c9d45dc"
            ]
        ]
    },
    {
        "id": "01c1e42bf0016008",
        "type": "debug",
        "z": "a022e047ab61f60f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 340,
        "wires": []
    },
    {
        "id": "5921e5eeb49b7505",
        "type": "join",
        "z": "a022e047ab61f60f",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 260,
        "wires": [
            [
                "3bdd1b833b98b7f1"
            ]
        ]
    },
    {
        "id": "3bdd1b833b98b7f1",
        "type": "function",
        "z": "a022e047ab61f60f",
        "name": "",
        "func": "const ipAddressAndSubnet = msg.payload['ipAddressAndSubnet'].replace(/(\\r\\n|\\n|\\r)/gm, \"\");\nconst gateway = msg.payload['gateway'].replace(/(\\r\\n|\\n|\\r)/gm, \"\");\nconst dhcp = msg.payload['dhcp'];\nconst dns = msg.payload['dns'].split(\"\\n\")\n\nconst networkSettings = {\n    dhcp: dhcp,\n    address: ipAddressAndSubnet,\n    gateway: gateway,\n    dns1: dns[0],\n    dns2: dns[1],\n}\n\nmsg.payload = networkSettings\nmsg.topic = 'network:settings'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 300,
        "wires": [
            [
                "01c1e42bf0016008",
                "2f1c14ff58be2875"
            ]
        ]
    },
    {
        "id": "75543a7b20521725",
        "type": "inject",
        "z": "a022e047ab61f60f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 70,
        "y": 80,
        "wires": [
            [
                "6186cad3b7b9f625",
                "125aca927afef4f4",
                "d1a2247af195a525",
                "31b57974ef9e2ac1"
            ]
        ]
    },
    {
        "id": "2f1c14ff58be2875",
        "type": "function",
        "z": "a022e047ab61f60f",
        "name": "redis state",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"network:settings\",\n    JSON.stringify(msg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 260,
        "wires": [
            [
                "62aea9ad708ec881",
                "1ddb258af0d8fa5a"
            ]
        ]
    },
    {
        "id": "1ddb258af0d8fa5a",
        "type": "redis-command",
        "z": "a022e047ab61f60f",
        "server": "ef790b5f.ecc138",
        "command": "SET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 950,
        "y": 260,
        "wires": [
            [
                "db84fde7c76b9635"
            ]
        ]
    },
    {
        "id": "62aea9ad708ec881",
        "type": "debug",
        "z": "a022e047ab61f60f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "db84fde7c76b9635",
        "type": "debug",
        "z": "a022e047ab61f60f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 990,
        "y": 220,
        "wires": []
    },
    {
        "id": "08e46b14b3a836cd",
        "type": "mqtt in",
        "z": "a022e047ab61f60f",
        "name": "",
        "topic": "network/settings",
        "qos": "1",
        "datatype": "auto",
        "broker": "5a051fab.6f842",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 540,
        "wires": [
            [
                "1feafd1c3a0eca48"
            ]
        ]
    },
    {
        "id": "1feafd1c3a0eca48",
        "type": "function",
        "z": "a022e047ab61f60f",
        "name": "",
        "func": "msg.payload = JSON.parse(msg.payload)\n\nconst dhcp = msg.payload['dhcp']\nconst ipAddress = msg.payload['address']\nconst gateway = msg.payload['gateway']\nconst subnetMask = msg.payload['subnetMask']\nconst dns1 = msg.payload['dns1']\nconst dns2 = msg.payload['dns2']\n\nif (dhcp == true) {\n    msg.payload = \"dhcp\"\n} else {\n    msg.payload = `${ipAddress} ${gateway} ${subnetMask} ${dns1} ${dns2}`\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 540,
        "wires": [
            [
                "53091576165840d1"
            ]
        ]
    },
    {
        "id": "57893196f7297950",
        "type": "debug",
        "z": "a022e047ab61f60f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 540,
        "wires": []
    },
    {
        "id": "8f25f961a779b996",
        "type": "mqtt out",
        "z": "a022e047ab61f60f",
        "name": "",
        "topic": "network/settings",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 420,
        "y": 460,
        "wires": []
    },
    {
        "id": "5fa008585e17beac",
        "type": "inject",
        "z": "a022e047ab61f60f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 460,
        "wires": [
            [
                "e4fbf022b9530bb6"
            ]
        ]
    },
    {
        "id": "e4fbf022b9530bb6",
        "type": "function",
        "z": "a022e047ab61f60f",
        "name": "",
        "func": "msg.payload = {\n  \"dhcp\": false,\n  \"address\": \"192.168.1.134\",\n  \"subnetMask\": 24,\n  \"gateway\": \"192.168.1.254\",\n  \"dns1\": \"192.168.1.253\",\n  \"dns2\": \"192.168.1.252\",\n};\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 460,
        "wires": [
            [
                "8f25f961a779b996"
            ]
        ]
    },
    {
        "id": "53091576165840d1",
        "type": "exec",
        "z": "a022e047ab61f60f",
        "command": "bash scripts/netplan.sh",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 600,
        "wires": [
            [
                "57893196f7297950"
            ],
            [
                "57893196f7297950"
            ],
            []
        ]
    },
    {
        "id": "ef3ddc777474cccc",
        "type": "comment",
        "z": "a022e047ab61f60f",
        "name": "Test Netplain Config Set",
        "info": "",
        "x": 120,
        "y": 420,
        "wires": []
    },
    {
        "id": "dd89daf9160489b3",
        "type": "comment",
        "z": "a022e047ab61f60f",
        "name": "Set Netplan Config",
        "info": "",
        "x": 110,
        "y": 500,
        "wires": []
    },
    {
        "id": "a20a20d12da1c80f",
        "type": "comment",
        "z": "a022e047ab61f60f",
        "name": "Retrieve Network Settings",
        "info": "",
        "x": 290,
        "y": 40,
        "wires": []
    },
    {
        "id": "31b57974ef9e2ac1",
        "type": "file in",
        "z": "a022e047ab61f60f",
        "name": "",
        "filename": "/etc/netplan/99-net-config.yaml",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": true,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "e58ccc9645dc223c"
            ]
        ]
    },
    {
        "id": "25c84cb75524ade8",
        "type": "debug",
        "z": "a022e047ab61f60f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 120,
        "wires": []
    },
    {
        "id": "382e6bc7dc3a7dd4",
        "type": "catch",
        "z": "a022e047ab61f60f",
        "name": "",
        "scope": [
            "31b57974ef9e2ac1"
        ],
        "uncaught": false,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "7b9c8d5ce0da4a25"
            ]
        ]
    },
    {
        "id": "7b9c8d5ce0da4a25",
        "type": "function",
        "z": "a022e047ab61f60f",
        "name": "if no netplan config",
        "func": "if (msg.payload) {\n    msg.payload = true\n}\nmsg.topic = 'dhcp'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 200,
        "wires": [
            [
                "5921e5eeb49b7505"
            ]
        ]
    },
    {
        "id": "e58ccc9645dc223c",
        "type": "yaml",
        "z": "a022e047ab61f60f",
        "property": "payload",
        "name": "",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "0902472c23a3e866"
            ]
        ]
    },
    {
        "id": "0902472c23a3e866",
        "type": "function",
        "z": "a022e047ab61f60f",
        "name": "",
        "func": "const dhcp = msg.payload['network']['ethernets']['eth0']['dhcp4']\n\nif (dhcp == 'yes') {\n    msg.payload = true\n} else {\n    msg.payload = false\n}\nmsg.topic = 'dhcp'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 120,
        "wires": [
            [
                "25c84cb75524ade8",
                "5921e5eeb49b7505"
            ]
        ]
    },
    {
        "id": "81216172d00d1592",
        "type": "mqtt out",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "topic": "",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 830,
        "y": 220,
        "wires": []
    },
    {
        "id": "ec0a89e93a0b3fea",
        "type": "inject",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "6132a5e9e984129f",
                "79501d6929dd0e5c",
                "d2c376896d56dc72"
            ]
        ]
    },
    {
        "id": "6132a5e9e984129f",
        "type": "exec",
        "z": "069dc62ea2d41d4e",
        "command": "timedatectl show",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "1",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 160,
        "wires": [
            [
                "da99c2c234185f44"
            ],
            [
                "0cf2fe26a6b6119a"
            ],
            []
        ]
    },
    {
        "id": "3a2ab5e0e0a97f5e",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 810,
        "y": 140,
        "wires": []
    },
    {
        "id": "da99c2c234185f44",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "format",
        "func": "timeArr = msg.payload.split(/\\n/g)\n\nlet timeData = {}\ntimeArr.forEach((item) => {\n    const newitem = item.split(\"=\")\n    timeData[newitem[0]] = newitem[1]\n})\nmsg.payload = timeData\nmsg.topic = \"timeDateSettings\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 160,
        "wires": [
            [
                "b7df5948940b88e0"
            ]
        ]
    },
    {
        "id": "12a91ab9daad441e",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 40,
        "wires": []
    },
    {
        "id": "4caf9ff34ef97f18",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "format",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 40,
        "wires": [
            [
                "31b24cd78db7c3cb"
            ]
        ]
    },
    {
        "id": "d2c376896d56dc72",
        "type": "redis-command",
        "z": "069dc62ea2d41d4e",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "currentTimeDateSettings",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 280,
        "y": 340,
        "wires": [
            [
                "524912494e7fb6d1"
            ]
        ]
    },
    {
        "id": "524912494e7fb6d1",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "format",
        "func": "msg.topic = msg.topic.replace(/\\//g, ':');\nmsg.payload = JSON.parse(msg.payload)\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "c8e5bd010165613c"
            ]
        ]
    },
    {
        "id": "c8e5bd010165613c",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "b7df5948940b88e0",
        "type": "join",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 650,
        "y": 200,
        "wires": [
            [
                "04cc2bb34ece8d97"
            ]
        ]
    },
    {
        "id": "355502ee5a58d6ec",
        "type": "exec",
        "z": "069dc62ea2d41d4e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "1",
        "winHide": false,
        "oldrc": false,
        "name": "Get NTP Servers",
        "x": 330,
        "y": 280,
        "wires": [
            [
                "aa853c2d73144449"
            ],
            [
                "0cf2fe26a6b6119a"
            ],
            []
        ]
    },
    {
        "id": "79501d6929dd0e5c",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "command to exec",
        "func": "// msg.payload = `timedatectl show-timesync | grep -P 'LinkNTPServers|ServerName' | sort | head -n1 | cut -d= -f2`\nmsg.payload = `timedatectl show-timesync | grep -P 'LinkNTPServers|ServerName|FallbackNTPServers|SystemNTPServers' | cut -d= -f2 | tr \" \" \"\\n\" | sort | uniq | tr \"\\n\" \" \"`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 240,
        "wires": [
            [
                "355502ee5a58d6ec"
            ]
        ]
    },
    {
        "id": "aa853c2d73144449",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "format",
        "func": "msg.topic = \"ntpServers\"\nmsg.payload = msg.payload.replace(/\\n/g, \"\")\nmsg.payload = msg.payload.split(' ')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 240,
        "wires": [
            [
                "b7df5948940b88e0"
            ]
        ]
    },
    {
        "id": "04cc2bb34ece8d97",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "serialize json",
        "func": "const timeDateSettings = msg.payload['timeDateSettings']\nconst ntpServers = { ntpServers: msg.payload['ntpServers'] }\n\nconst obj = Object.assign(timeDateSettings, ntpServers)\nObject.keys(obj).forEach(key => obj[key] === undefined ? delete obj[key] : {});\nmsg.payload = obj\nmsg.topic = \"currentTimeDateSettings\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 180,
        "wires": [
            [
                "3a2ab5e0e0a97f5e",
                "81216172d00d1592"
            ]
        ]
    },
    {
        "id": "0cf2fe26a6b6119a",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 200,
        "wires": []
    },
    {
        "id": "bbd7958b4e5bf886",
        "type": "mqtt in",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "topic": "currentTimeDateSettings",
        "qos": "1",
        "datatype": "auto",
        "broker": "5a051fab.6f842",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 40,
        "wires": [
            [
                "4caf9ff34ef97f18"
            ]
        ]
    },
    {
        "id": "31b24cd78db7c3cb",
        "type": "redis-command",
        "z": "069dc62ea2d41d4e",
        "server": "ef790b5f.ecc138",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 440,
        "y": 40,
        "wires": [
            [
                "12a91ab9daad441e"
            ]
        ]
    },
    {
        "id": "93a1d7d5d84e1a9d",
        "type": "comment",
        "z": "069dc62ea2d41d4e",
        "name": "Fetch NTP Settings",
        "info": "",
        "x": 310,
        "y": 120,
        "wires": []
    },
    {
        "id": "ad2d2e845be8ef72",
        "type": "mqtt in",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "topic": "system/ntp",
        "qos": "1",
        "datatype": "auto",
        "broker": "5a051fab.6f842",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 520,
        "wires": [
            [
                "e677e47639adb446",
                "583bde77d58a3284",
                "24173c8de48439b8",
                "32db9573eb437fa4",
                "fd1828060bca772b",
                "c9a8e59c4c370b93"
            ]
        ]
    },
    {
        "id": "0078dc546d0168c3",
        "type": "mqtt out",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "topic": "system/ntp",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 410,
        "y": 440,
        "wires": []
    },
    {
        "id": "66cc654ad87d4cca",
        "type": "inject",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 440,
        "wires": [
            [
                "62d22fe6f1f621be"
            ]
        ]
    },
    {
        "id": "62d22fe6f1f621be",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "func": "const test = {\n    \"ntp\": false,\n    \"primary\": \"ntp.ubuntu.com\",\n    \"secondary\": \"\",\n    \"timezone\" : \"America/Chicago\",\n    \"datetime\": \"2022-04-21 15:23\"\n};\n\nmsg.payload = test;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 440,
        "wires": [
            [
                "0078dc546d0168c3"
            ]
        ]
    },
    {
        "id": "b0e8356b29987dc1",
        "type": "comment",
        "z": "069dc62ea2d41d4e",
        "name": "Set NTP Settings",
        "info": "",
        "x": 100,
        "y": 480,
        "wires": []
    },
    {
        "id": "99409436a51754eb",
        "type": "comment",
        "z": "069dc62ea2d41d4e",
        "name": "The Delay flow was quick and dirty way to get servers to update properly",
        "info": "",
        "x": 270,
        "y": 400,
        "wires": []
    },
    {
        "id": "9130323bc0127320",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 640,
        "wires": []
    },
    {
        "id": "fd1828060bca772b",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "update ntp servers",
        "func": "const payload = JSON.parse(msg.payload)\nconst primary = payload['primary']\nconst secondary = payload['secondary']\nconst ntpStatus = payload['ntp']\n\nif (ntpStatus == true) {\n    let ntpServerStr;\n    if (secondary !== '') {\n        ntpServerStr = `${primary} ${secondary}`\n        // msg.payload = ntpServerStr // TEST THE INPUT\n        // msg.payload = `for iface in $(ip addr ls | grep 'BROADCAST.*UP' | cut -d: -f2 | grep -o '[a-zA-Z0-9]*'); do timedatectl ntp-servers $iface ${ntpServerStr}; done`;\n        msg.payload = `sed -i -E 's/^#?(NTP|FallbackNTP)=.*$/\\\\1=${ntpServerStr}/' /etc/systemd/timesyncd.conf`\n    } else {\n        ntpServerStr = `${primary}`\n        // msg.payload = ntpServerStr // TEST THE INPUT\n        // msg.payload = `for iface in $(ip addr ls | grep 'BROADCAST.*UP' | cut -d: -f2 | grep -o '[a-zA-Z0-9]*'); do timedatectl ntp-servers $iface ${ntpServerStr}; done`;\n        msg.payload = `sed -i -E 's/^#?(NTP|FallbackNTP)=.*$/\\\\1=${ntpServerStr}/' /etc/systemd/timesyncd.conf`\n    }\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 600,
        "wires": [
            [
                "9130323bc0127320",
                "ea59ef521b5245c7"
            ]
        ]
    },
    {
        "id": "3491d9d333ee081c",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 800,
        "wires": []
    },
    {
        "id": "4676ad8ef08eda34",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "update datetime",
        "func": "const payload = JSON.parse(msg.payload)\nconst datetime = payload['datetime']\nconst ntpStatus = payload['ntp']\n\nif (ntpStatus == false) {\n    msg.payload = `timedatectl set-time \"${datetime}\"`\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 760,
        "wires": [
            [
                "3491d9d333ee081c",
                "ea59ef521b5245c7"
            ]
        ]
    },
    {
        "id": "725fe3cb663c0a6a",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "ea59ef521b5245c7",
        "type": "exec",
        "z": "069dc62ea2d41d4e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "3",
        "winHide": false,
        "oldrc": false,
        "name": "NTP Exec",
        "x": 700,
        "y": 600,
        "wires": [
            [
                "725fe3cb663c0a6a"
            ],
            [
                "725fe3cb663c0a6a"
            ],
            [
                "725fe3cb663c0a6a"
            ]
        ]
    },
    {
        "id": "6a499dcdc7b6bd39",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 960,
        "wires": []
    },
    {
        "id": "583bde77d58a3284",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "update timezone",
        "func": "const payload = JSON.parse(msg.payload)\nconst timezone = payload['timezone']\n\nif (timezone) {\n    msg.payload = `timedatectl set-timezone \"${timezone}\"`\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 920,
        "wires": [
            [
                "6a499dcdc7b6bd39",
                "ea59ef521b5245c7"
            ]
        ]
    },
    {
        "id": "abbb395b732a63d0",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 720,
        "wires": []
    },
    {
        "id": "e677e47639adb446",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "update ntp status",
        "func": "const payload = JSON.parse(msg.payload)\nconst ntpStatus = payload['ntp']\n\n\nmsg.payload = `timedatectl set-ntp \"${ntpStatus}\"`\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 680,
        "wires": [
            [
                "abbb395b732a63d0",
                "ea59ef521b5245c7"
            ]
        ]
    },
    {
        "id": "e57646a48136143d",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 560,
        "wires": []
    },
    {
        "id": "ff25c2316564415a",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "update ntp servers",
        "func": "const payload = JSON.parse(msg.payload)\nconst primary = payload['primary']\nconst secondary = payload['secondary']\nconst ntpStatus = payload['ntp']\n\nif (ntpStatus == true) {\n    msg.payload = `systemctl restart systemd-timesyncd`\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 520,
        "wires": [
            [
                "e57646a48136143d",
                "ea59ef521b5245c7"
            ]
        ]
    },
    {
        "id": "24173c8de48439b8",
        "type": "delay",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 520,
        "wires": [
            [
                "ff25c2316564415a"
            ]
        ]
    },
    {
        "id": "32db9573eb437fa4",
        "type": "function",
        "z": "069dc62ea2d41d4e",
        "name": "update RTC",
        "func": "const payload = JSON.parse(msg.payload)\nconst datetime = payload['datetime']\nconst ntpStatus = payload['ntp']\n\nif (datetime && ntpStatus == false) {\n    msg.payload = `megaind 0 rtcwr $(date +\"%m %d %y %H %M %S\")`\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 840,
        "wires": [
            [
                "136fa57865ecde51",
                "ea59ef521b5245c7"
            ]
        ]
    },
    {
        "id": "136fa57865ecde51",
        "type": "debug",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 880,
        "wires": []
    },
    {
        "id": "c9a8e59c4c370b93",
        "type": "delay",
        "z": "069dc62ea2d41d4e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 120,
        "y": 780,
        "wires": [
            [
                "4676ad8ef08eda34"
            ]
        ]
    },
    {
        "id": "4b430ecc366eda28",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "filterAlarmThreshold",
        "func": "\nif (msg.payload == 10) {\n    msg.payload = `${\"#cccccc\"}` // white\n    return msg\n} \n\nif (msg.payload == 11) {\n    msg.payload = `${\"#0000ff\"}`     // blue\n    return msg\n}\n\nif (msg.payload == 4) {\n    msg.payload = `${\"#ff8c00\"}`       // orange\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 220,
        "wires": [
            [
                "b78222e673d717d6"
            ]
        ]
    },
    {
        "id": "b78222e673d717d6",
        "type": "debug",
        "z": "669f735997e8ccf8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "b89b0a30f7461e3f",
        "type": "rpi-neopixels",
        "z": "669f735997e8ccf8",
        "name": "",
        "gpio": 18,
        "pixels": "300",
        "bgnd": "",
        "fgnd": "",
        "wipe": "0",
        "mode": "pixelsneedle",
        "rgb": "rgb",
        "brightness": "100",
        "gamma": true,
        "x": 1240,
        "y": 280,
        "wires": []
    },
    {
        "id": "5889c63e93c79b88",
        "type": "redis-command",
        "z": "669f735997e8ccf8",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "pdu:power:state",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 340,
        "y": 60,
        "wires": [
            [
                "d926db230bc74bf6"
            ]
        ]
    },
    {
        "id": "d926db230bc74bf6",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "set topic",
        "func": "msg.topic = \"pduState\"\nmsg.payload = parseInt(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 60,
        "wires": [
            [
                "b7226a910d6d5f9e"
            ]
        ]
    },
    {
        "id": "e4638eb627d50f03",
        "type": "inject",
        "z": "669f735997e8ccf8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 70,
        "y": 60,
        "wires": [
            [
                "5889c63e93c79b88",
                "0b2099a49ece6323",
                "85749a148ead50fa",
                "28ca9fa46a9c2a16",
                "91f48fa2db46fb50",
                "fc1df3c5a7763b4b"
            ]
        ]
    },
    {
        "id": "b7226a910d6d5f9e",
        "type": "join",
        "z": "669f735997e8ccf8",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 730,
        "y": 180,
        "wires": [
            [
                "3e9e25ae0a395bdf"
            ]
        ]
    },
    {
        "id": "3e9e25ae0a395bdf",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "evaluate",
        "func": "const pduState = msg.payload['pduState']\nconst oilLevelLow = msg.payload['oilLevelLow']\nconst tankOilTemp = msg.payload['tankOilTemp']\nconst rsvrOilTemp = msg.payload['rsvrOilTemp']\nconst majorTankOilTemp = msg.payload['major:tankOilTemp']\nconst majorRsvrOilTemp = msg.payload['major:rsvrOilTemp']\n\nif (pduState == 11) {\n    msg.payload = pduState\n}\n\nif (pduState == 10) {\n    msg.payload = pduState\n}\n\nif (majorTankOilTemp == 4 || majorRsvrOilTemp == 4) {\n    msg.payload = 4\n}\n\nif (oilLevelLow > 0 || tankOilTemp > 0 || rsvrOilTemp > 0) {\n    msg.payload = 2\n}\n\nmsg.topic = 'ledState'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 180,
        "wires": [
            [
                "9254a75e875c4024",
                "4b430ecc366eda28",
                "016cdcb48ed93879"
            ]
        ]
    },
    {
        "id": "0b2099a49ece6323",
        "type": "redis-command",
        "z": "669f735997e8ccf8",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "counter:oilLevelLow",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 350,
        "y": 100,
        "wires": [
            [
                "a4e4e0a9fba01137"
            ]
        ]
    },
    {
        "id": "a4e4e0a9fba01137",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "set topic",
        "func": "msg.topic = \"oilLevelLow\"\nmsg.payload = parseInt(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 100,
        "wires": [
            [
                "b7226a910d6d5f9e"
            ]
        ]
    },
    {
        "id": "9254a75e875c4024",
        "type": "debug",
        "z": "669f735997e8ccf8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 260,
        "wires": []
    },
    {
        "id": "85749a148ead50fa",
        "type": "redis-command",
        "z": "669f735997e8ccf8",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "counter:tankOilTemp",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "d7d7df020efefe0e"
            ]
        ]
    },
    {
        "id": "d7d7df020efefe0e",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "set topic",
        "func": "msg.topic = \"tankOilTemp\"\nmsg.payload = parseInt(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 140,
        "wires": [
            [
                "b7226a910d6d5f9e"
            ]
        ]
    },
    {
        "id": "6395481984953288",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "set topic",
        "func": "msg.topic = \"rsvrOilTemp\"\nmsg.payload = parseInt(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 180,
        "wires": [
            [
                "b7226a910d6d5f9e"
            ]
        ]
    },
    {
        "id": "28ca9fa46a9c2a16",
        "type": "redis-command",
        "z": "669f735997e8ccf8",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "counter:rsvrOilTemp",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "6395481984953288"
            ]
        ]
    },
    {
        "id": "016cdcb48ed93879",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "filterAlarmThreshold",
        "func": "if (msg.payload == 2) {\n    msg.payload = `${\"#ff0000\"}`\n    return msg// red \n}\n\n\n// return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 180,
        "wires": [
            [
                "cd8315e56596a8bc"
            ]
        ]
    },
    {
        "id": "cd8315e56596a8bc",
        "type": "debug",
        "z": "669f735997e8ccf8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 140,
        "wires": []
    },
    {
        "id": "dddf0cb10bb19dee",
        "type": "delay",
        "z": "669f735997e8ccf8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 750,
        "y": 140,
        "wires": [
            [
                "b145f44921d86410"
            ]
        ]
    },
    {
        "id": "b145f44921d86410",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "",
        "func": "\nmsg.payload = `${\"#000000\"}`\nreturn msg// red \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "91f48fa2db46fb50",
        "type": "redis-command",
        "z": "669f735997e8ccf8",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "sensor:tankOilTemp",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "ec4f3a5c4d516286"
            ]
        ]
    },
    {
        "id": "fc1df3c5a7763b4b",
        "type": "redis-command",
        "z": "669f735997e8ccf8",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "sensor:rsvrOilTemp",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "d62df2970db80334"
            ]
        ]
    },
    {
        "id": "ec4f3a5c4d516286",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "set topic",
        "func": "msg.topic = \"major:tankOilTemp\"\nmsg.payload = parseInt(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 220,
        "wires": [
            [
                "b7226a910d6d5f9e"
            ]
        ]
    },
    {
        "id": "d62df2970db80334",
        "type": "function",
        "z": "669f735997e8ccf8",
        "name": "set topic",
        "func": "msg.topic = \"major:rsvrOilTemp\"\nmsg.payload = parseInt(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 260,
        "wires": [
            [
                "b7226a910d6d5f9e"
            ]
        ]
    },
    {
        "id": "b3b64b15002555a8",
        "type": "inject",
        "z": "669f735997e8ccf8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#0000ff",
        "payloadType": "str",
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "b89b0a30f7461e3f"
            ]
        ]
    },
    {
        "id": "937fd222e7a88140",
        "type": "inject",
        "z": "82849c3263d0f5e0",
        "name": "Inject PID setpoint (SP)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "cpu/fan/setpoint",
        "payload": "46.5",
        "payloadType": "num",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "75ba7e91f795a583",
                "faa672826f42d710",
                "388c76863b453d5f"
            ]
        ]
    },
    {
        "id": "a73c21fd7d4be84c",
        "type": "mqtt out",
        "z": "82849c3263d0f5e0",
        "name": "cpu/temperature/processvalue",
        "topic": "cpu/temperature/processvalue",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 730,
        "y": 80,
        "wires": []
    },
    {
        "id": "4e5f7cc05fdc59c5",
        "type": "comment",
        "z": "82849c3263d0f5e0",
        "name": "Poll CPU Temperature ",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "75ba7e91f795a583",
        "type": "mqtt out",
        "z": "82849c3263d0f5e0",
        "name": "cpu/temperature/setpoint",
        "topic": "cpu/temperature/processvalue",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 150,
        "y": 280,
        "wires": []
    },
    {
        "id": "2c11018abdd5a065",
        "type": "exec",
        "z": "82849c3263d0f5e0",
        "command": "cat /sys/class/thermal/thermal_zone0/temp",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "5",
        "winHide": false,
        "name": "exec cat CPU temp",
        "x": 250,
        "y": 87.5,
        "wires": [
            [
                "87d64f1e7fa20bd7"
            ],
            [],
            []
        ]
    },
    {
        "id": "6ee243d81fa2300b",
        "type": "inject",
        "z": "82849c3263d0f5e0",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "2c11018abdd5a065"
            ]
        ]
    },
    {
        "id": "87d64f1e7fa20bd7",
        "type": "function",
        "z": "82849c3263d0f5e0",
        "name": "Format CPU temp",
        "func": "// Check input types and handle errors\nif (typeof (msg.payload) !== 'number') {\n    Number(msg.payload)\n//    throw new Error(\"msg.payload is not a number\");\n}\n\nprocessVariable = Number(msg.payload) / 1000; // + 32;\nmsg.payload = processVariable;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 80,
        "wires": [
            [
                "a73c21fd7d4be84c",
                "662c866ccf656005"
            ]
        ]
    },
    {
        "id": "a24f69352e363f7f",
        "type": "range",
        "z": "82849c3263d0f5e0",
        "minin": "0",
        "maxin": "1",
        "minout": "0",
        "maxout": "100",
        "action": "clamp",
        "round": true,
        "property": "payload",
        "name": "Scale 0 - 100",
        "x": 670,
        "y": 200,
        "wires": [
            [
                "85a57f09e0c00272"
            ]
        ]
    },
    {
        "id": "85a57f09e0c00272",
        "type": "rbe",
        "z": "82849c3263d0f5e0",
        "name": "",
        "func": "deadbandEq",
        "gap": "10",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 820,
        "y": 200,
        "wires": [
            [
                "49626c69d6dd8dc9"
            ]
        ]
    },
    {
        "id": "4821d80a3178bd42",
        "type": "mqtt out",
        "z": "82849c3263d0f5e0",
        "name": "cpu/fan/loopoutput",
        "topic": "cpu/fan/loopoutput",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 690,
        "y": 280,
        "wires": []
    },
    {
        "id": "faa672826f42d710",
        "type": "debug",
        "z": "82849c3263d0f5e0",
        "name": "debug setpoint",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 240,
        "wires": []
    },
    {
        "id": "65dc53081b0314d6",
        "type": "debug",
        "z": "82849c3263d0f5e0",
        "name": "debug loop output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 240,
        "wires": []
    },
    {
        "id": "662c866ccf656005",
        "type": "debug",
        "z": "82849c3263d0f5e0",
        "name": "debug cpu temp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 40,
        "wires": []
    },
    {
        "id": "49626c69d6dd8dc9",
        "type": "SFAN Power",
        "z": "82849c3263d0f5e0",
        "name": "",
        "stack": "0",
        "payload": "payload",
        "payloadType": "msg",
        "x": 970,
        "y": 200,
        "wires": []
    },
    {
        "id": "388c76863b453d5f",
        "type": "PIDLoop",
        "z": "82849c3263d0f5e0",
        "Kp": 1,
        "Ki": "2",
        "Kd": 1,
        "recalcTime": 5,
        "setPointTopic": "cpu/fan/setpoint",
        "fireTopic": "fire/1",
        "fixedTopic": "fixed/1",
        "fixedValue": 0,
        "deadBand": "0.5",
        "x": 460,
        "y": 200,
        "wires": [
            [],
            [
                "a24f69352e363f7f",
                "65dc53081b0314d6",
                "4821d80a3178bd42"
            ]
        ],
        "inputLabels": [
            "PV"
        ]
    },
    {
        "id": "f61a5524f30a8341",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 730,
        "y": 880,
        "wires": [
            [
                "c0565489ac4eb144"
            ],
            [
                "c0565489ac4eb144"
            ],
            []
        ]
    },
    {
        "id": "6dd3728e4bd88667",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "totalSystemMemory",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 390,
        "y": 880,
        "wires": [
            [
                "dce69f85beaa1f05"
            ]
        ]
    },
    {
        "id": "c0565489ac4eb144",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 880,
        "wires": []
    },
    {
        "id": "dce69f85beaa1f05",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 880,
        "wires": [
            [
                "f61a5524f30a8341"
            ]
        ]
    },
    {
        "id": "d9d0e89550f4d189",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 890,
        "y": 840,
        "wires": [
            [
                "49759ee1a2fa425e"
            ]
        ]
    },
    {
        "id": "49759ee1a2fa425e",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1050,
        "y": 840,
        "wires": []
    },
    {
        "id": "96847b4db4197118",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Total System Memory",
        "x": 520,
        "y": 840,
        "wires": [
            [
                "9ff9e6fde043a162"
            ],
            [],
            []
        ]
    },
    {
        "id": "fe709d426c574b91",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "Command",
        "func": "msg.payload = \"grep 'MemTotal' /proc/meminfo | grep -Po '[0-9]* [a-zA-Z]{2}$'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 840,
        "wires": [
            [
                "96847b4db4197118"
            ]
        ]
    },
    {
        "id": "9ff9e6fde043a162",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "const arr = msg.payload.split(\" \")\nmsg.payload = parseFloat(arr[0])\n\nmsg.payload = [\n    \"totalSystemMemory\",\n    5,\n    msg.payload\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 840,
        "wires": [
            [
                "d9d0e89550f4d189",
                "596a1cc160b19e20"
            ]
        ]
    },
    {
        "id": "df05429c284fb38e",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 730,
        "y": 1040,
        "wires": [
            [
                "3068dcff50e25d23"
            ],
            [
                "3068dcff50e25d23"
            ],
            []
        ]
    },
    {
        "id": "b25acf3b6eb2aeed",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "freeSystemMemory",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "3c57ca5c046df065"
            ]
        ]
    },
    {
        "id": "3068dcff50e25d23",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3c57ca5c046df065",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1040,
        "wires": [
            [
                "df05429c284fb38e"
            ]
        ]
    },
    {
        "id": "20b012026dd51f6b",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 890,
        "y": 1000,
        "wires": [
            [
                "08be82a90908f91c"
            ]
        ]
    },
    {
        "id": "08be82a90908f91c",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1050,
        "y": 1000,
        "wires": []
    },
    {
        "id": "28ae969a9a5d3aef",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Free System Memory",
        "x": 520,
        "y": 1000,
        "wires": [
            [
                "6f212efb890d449c"
            ],
            [],
            []
        ]
    },
    {
        "id": "e700eb6740bc4ee5",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "Command",
        "func": "msg.payload = \"grep 'MemAvailable' /proc/meminfo | grep -Po '[0-9]* [a-zA-Z]{2}$'\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 1000,
        "wires": [
            [
                "28ae969a9a5d3aef"
            ]
        ]
    },
    {
        "id": "6f212efb890d449c",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "const arr = msg.payload.split(\" \")\nmsg.payload = parseFloat(arr[0])\n\nmsg.payload = [\n    \"freeSystemMemory\",\n    5,\n    msg.payload\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1000,
        "wires": [
            [
                "20b012026dd51f6b",
                "d1d663d17c684d8f"
            ]
        ]
    },
    {
        "id": "cbc95c474efe15e5",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 730,
        "y": 1200,
        "wires": [
            [
                "84f5a88d0c0a3c8a"
            ],
            [
                "84f5a88d0c0a3c8a"
            ],
            []
        ]
    },
    {
        "id": "cca46b0bc82c558f",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "totalSystemStorage",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 390,
        "y": 1200,
        "wires": [
            [
                "a1eb408b6166ad6a"
            ]
        ]
    },
    {
        "id": "84f5a88d0c0a3c8a",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a1eb408b6166ad6a",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1200,
        "wires": [
            [
                "cbc95c474efe15e5"
            ]
        ]
    },
    {
        "id": "b1e9bf88ca346be8",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 890,
        "y": 1160,
        "wires": [
            [
                "46f58e9f3b27a30f"
            ]
        ]
    },
    {
        "id": "46f58e9f3b27a30f",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "4592af0edc5f6e3d",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Free System Memory",
        "x": 520,
        "y": 1160,
        "wires": [
            [
                "afc55dcdd58307a8"
            ],
            [],
            []
        ]
    },
    {
        "id": "a05dd5e00642524b",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "Command",
        "func": "msg.payload = `df -B1000 | grep '/$' | awk '{print $2\" kB\"}'`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "4592af0edc5f6e3d"
            ]
        ]
    },
    {
        "id": "afc55dcdd58307a8",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "const arr = msg.payload.split(\" \")\nmsg.payload = parseFloat(arr[0])\n\nmsg.payload = [\n    \"totalSystemStorage\",\n    5,\n    msg.payload\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1160,
        "wires": [
            [
                "b1e9bf88ca346be8",
                "d4f23731c5b98bb0"
            ]
        ]
    },
    {
        "id": "81d13bb14e3b1beb",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 730,
        "y": 1360,
        "wires": [
            [
                "adbcd4282a6136cb"
            ],
            [
                "adbcd4282a6136cb"
            ],
            []
        ]
    },
    {
        "id": "2f5358c68dafa58d",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "freeSystemStorage",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 390,
        "y": 1360,
        "wires": [
            [
                "db0754be2e47d229"
            ]
        ]
    },
    {
        "id": "adbcd4282a6136cb",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 1360,
        "wires": []
    },
    {
        "id": "db0754be2e47d229",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1360,
        "wires": [
            [
                "81d13bb14e3b1beb"
            ]
        ]
    },
    {
        "id": "e5189a87c4570857",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 890,
        "y": 1320,
        "wires": [
            [
                "73444ebdb78f54d6"
            ]
        ]
    },
    {
        "id": "73444ebdb78f54d6",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1050,
        "y": 1320,
        "wires": []
    },
    {
        "id": "87867a582676319b",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Free System Storage",
        "x": 520,
        "y": 1320,
        "wires": [
            [
                "c12bffda57a7c8c2"
            ],
            [],
            []
        ]
    },
    {
        "id": "c034726204117f61",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "Command",
        "func": "msg.payload = `df -B1000 | grep '/$' | awk '{print $4\" kB\"}'`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 1320,
        "wires": [
            [
                "87867a582676319b"
            ]
        ]
    },
    {
        "id": "c12bffda57a7c8c2",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "const arr = msg.payload.split(\" \")\nmsg.payload = parseFloat(arr[0])\n\nmsg.payload = [\n    \"freeSystemStorage\",\n    5,\n    msg.payload\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1320,
        "wires": [
            [
                "e5189a87c4570857",
                "1a0634ad9d129c6f"
            ]
        ]
    },
    {
        "id": "a615d7fe59c1a6d1",
        "type": "comment",
        "z": "e80c72b156706da5",
        "name": "Control IO Board Voltage",
        "info": "",
        "x": 370,
        "y": 460,
        "wires": []
    },
    {
        "id": "093d2a5cf3fdd499",
        "type": "comment",
        "z": "e80c72b156706da5",
        "name": "RTD Hat Version",
        "info": "",
        "x": 340,
        "y": 180,
        "wires": []
    },
    {
        "id": "7b6ac780e932eea2",
        "type": "comment",
        "z": "e80c72b156706da5",
        "name": "IA Hat Version",
        "info": "",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "4ce7bad935d6a6c3",
        "type": "comment",
        "z": "e80c72b156706da5",
        "name": "Control IO CPU Board Voltage",
        "info": "",
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "bc521ae4451f1433",
        "type": "comment",
        "z": "e80c72b156706da5",
        "name": "Control IO CPU Temperature",
        "info": "",
        "x": 380,
        "y": 640,
        "wires": []
    },
    {
        "id": "1156d56781be3cc0",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "RTD Version",
        "x": 490,
        "y": 220,
        "wires": [
            [
                "7fa15c9587554278"
            ],
            [],
            []
        ]
    },
    {
        "id": "4bf20cb9a3ca146d",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "Command",
        "func": "msg.payload = \"rtd 0 board\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 220,
        "wires": [
            [
                "1156d56781be3cc0"
            ]
        ]
    },
    {
        "id": "7fa15c9587554278",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "const payload  = msg.payload\n                        .split(\"\\n\")\nmsg.payload = [\n    \"rtdHatVersion\",\n    5,\n    parseFloat(payload[0].replace(/[^0-9.]/g, ''))\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "65d5d4e7ddac65e0",
                "bb64b840d1765f78"
            ]
        ]
    },
    {
        "id": "65d5d4e7ddac65e0",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 790,
        "y": 220,
        "wires": [
            [
                "896a0d07af4c8a46"
            ]
        ]
    },
    {
        "id": "896a0d07af4c8a46",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "c499189b07d12df8",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "IA Hat Version",
        "x": 500,
        "y": 100,
        "wires": [
            [
                "9be8710d8b07fa53"
            ],
            [],
            []
        ]
    },
    {
        "id": "c41a7bb3572c466f",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "Command",
        "func": "msg.payload = \"megaind 0 board\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "c499189b07d12df8"
            ]
        ]
    },
    {
        "id": "9be8710d8b07fa53",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "const payload  = msg.payload.split(\",\")\n\nmsg.payload = [\n    \"iaHatVersion\",\n    5,\n    parseFloat(payload[0].replace(/[^0-9.]/g, ''))\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 100,
        "wires": [
            [
                "3043794f8be5ae46",
                "2df7cb315fdf2744"
            ]
        ]
    },
    {
        "id": "3043794f8be5ae46",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 790,
        "y": 100,
        "wires": [
            [
                "23f576508f584337"
            ]
        ]
    },
    {
        "id": "23f576508f584337",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 100,
        "wires": []
    },
    {
        "id": "2df7cb315fdf2744",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 60,
        "wires": []
    },
    {
        "id": "5e0bccfe59d5bccd",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "CPU Voltage",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "044bc7fad26bf84f"
            ],
            [],
            []
        ]
    },
    {
        "id": "7c4b99169cf16e06",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "Command",
        "func": "msg.payload = \"megaind 0 board\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 340,
        "wires": [
            [
                "5e0bccfe59d5bccd"
            ]
        ]
    },
    {
        "id": "044bc7fad26bf84f",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "const payload  = msg.payload.split(\",\")\n\nmsg.payload = [\n    \"controlIoCpuBoardVoltage\",\n    5,\n    parseFloat(payload[3].replace(/[^0-9.]/g, ''))\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 340,
        "wires": [
            [
                "5aa780687b4215ee",
                "a5c38ea1e92a4801"
            ]
        ]
    },
    {
        "id": "5aa780687b4215ee",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 790,
        "y": 340,
        "wires": [
            [
                "e8a6bd9f54fdc46e"
            ]
        ]
    },
    {
        "id": "e8a6bd9f54fdc46e",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "a5c38ea1e92a4801",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 300,
        "wires": []
    },
    {
        "id": "bb64b840d1765f78",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 180,
        "wires": []
    },
    {
        "id": "f6a4714e7d6c63dc",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "Command",
        "func": "msg.payload = \"megaind 0 board\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 500,
        "wires": [
            [
                "85edc2cc45a23db5"
            ]
        ]
    },
    {
        "id": "85edc2cc45a23db5",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Board Voltage",
        "x": 500,
        "y": 500,
        "wires": [
            [
                "5ef1111b31740a50"
            ],
            [],
            []
        ]
    },
    {
        "id": "5ef1111b31740a50",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "const payload  = msg.payload.split(\",\")\n\nmsg.payload = [\n    \"controlIoBoardVoltage\",\n    5,\n    parseFloat(payload[2].replace(/[^0-9.]/g, ''))\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 500,
        "wires": [
            [
                "f84f1e971c6b36dc",
                "8a0247923a9e18ad"
            ]
        ]
    },
    {
        "id": "8a0247923a9e18ad",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "f84f1e971c6b36dc",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 790,
        "y": 500,
        "wires": [
            [
                "0c7bd12d3388a904"
            ]
        ]
    },
    {
        "id": "0c7bd12d3388a904",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 500,
        "wires": []
    },
    {
        "id": "d7f91248ae8591d3",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "Command",
        "func": "msg.payload = \"megaind 0 board\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 680,
        "wires": [
            [
                "ebba7b9602c1989f"
            ]
        ]
    },
    {
        "id": "ebba7b9602c1989f",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "CPU Temp",
        "x": 490,
        "y": 680,
        "wires": [
            [
                "f27b8dc8d94bfde9"
            ],
            [],
            []
        ]
    },
    {
        "id": "f27b8dc8d94bfde9",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "const payload  = msg.payload.split(\",\")\n\nmsg.payload = [\n    \"controlIoCpuTemperature\",\n    5,\n    parseFloat(payload[1].replace(/[^0-9.]/g, ''))\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 680,
        "wires": [
            [
                "bd980d82c0873985",
                "6d8568460e0fefef"
            ]
        ]
    },
    {
        "id": "bd980d82c0873985",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 790,
        "y": 680,
        "wires": [
            [
                "a7fc49d2874fdf0c"
            ]
        ]
    },
    {
        "id": "6d8568460e0fefef",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 640,
        "wires": []
    },
    {
        "id": "a7fc49d2874fdf0c",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 680,
        "wires": []
    },
    {
        "id": "e895cfc1fa4eca02",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "totalSystemMemory",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 390,
        "y": 720,
        "wires": [
            [
                "0828b8a57b090221"
            ]
        ]
    },
    {
        "id": "0828b8a57b090221",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 720,
        "wires": [
            [
                "59a144443b8cc917"
            ]
        ]
    },
    {
        "id": "59a144443b8cc917",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 730,
        "y": 720,
        "wires": [
            [
                "b5fafbd48a765757"
            ],
            [
                "b5fafbd48a765757"
            ],
            []
        ]
    },
    {
        "id": "b5fafbd48a765757",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 720,
        "wires": []
    },
    {
        "id": "494905a27385aaa0",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "totalSystemMemory",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 390,
        "y": 540,
        "wires": [
            [
                "3f5296e091258586"
            ]
        ]
    },
    {
        "id": "3f5296e091258586",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 540,
        "wires": [
            [
                "27c6fd439bea118b"
            ]
        ]
    },
    {
        "id": "27c6fd439bea118b",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 730,
        "y": 540,
        "wires": [
            [
                "33868b6aa6c66d87"
            ],
            [
                "33868b6aa6c66d87"
            ],
            []
        ]
    },
    {
        "id": "33868b6aa6c66d87",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 540,
        "wires": []
    },
    {
        "id": "18036ddd9a32a197",
        "type": "redis-command",
        "z": "e80c72b156706da5",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "totalSystemMemory",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 390,
        "y": 380,
        "wires": [
            [
                "5a5c62cee1d89d71"
            ]
        ]
    },
    {
        "id": "5a5c62cee1d89d71",
        "type": "function",
        "z": "e80c72b156706da5",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "411643edc33f8c26"
            ]
        ]
    },
    {
        "id": "16047c7cc8cdcb89",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 380,
        "wires": []
    },
    {
        "id": "411643edc33f8c26",
        "type": "exec",
        "z": "e80c72b156706da5",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 730,
        "y": 380,
        "wires": [
            [
                "16047c7cc8cdcb89"
            ],
            [
                "16047c7cc8cdcb89"
            ],
            []
        ]
    },
    {
        "id": "14c718de656d6242",
        "type": "inject",
        "z": "e80c72b156706da5",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "c41a7bb3572c466f",
                "4bf20cb9a3ca146d",
                "7c4b99169cf16e06",
                "f6a4714e7d6c63dc",
                "d7f91248ae8591d3",
                "fe709d426c574b91",
                "e700eb6740bc4ee5",
                "a05dd5e00642524b",
                "c034726204117f61"
            ]
        ]
    },
    {
        "id": "c49ebc0c4965f6c2",
        "type": "comment",
        "z": "e80c72b156706da5",
        "name": "Total System Memory",
        "info": "",
        "x": 360,
        "y": 800,
        "wires": []
    },
    {
        "id": "596a1cc160b19e20",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 870,
        "y": 800,
        "wires": []
    },
    {
        "id": "d1d663d17c684d8f",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 870,
        "y": 960,
        "wires": []
    },
    {
        "id": "ff11576152a3d0f5",
        "type": "comment",
        "z": "e80c72b156706da5",
        "name": "Free System Memory",
        "info": "",
        "x": 360,
        "y": 960,
        "wires": []
    },
    {
        "id": "b4d249526fad0d20",
        "type": "comment",
        "z": "e80c72b156706da5",
        "name": "Free System Memory",
        "info": "",
        "x": 360,
        "y": 1120,
        "wires": []
    },
    {
        "id": "557b93f2598b2ffe",
        "type": "comment",
        "z": "e80c72b156706da5",
        "name": "Free System Storage",
        "info": "",
        "x": 360,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d4f23731c5b98bb0",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 870,
        "y": 1120,
        "wires": []
    },
    {
        "id": "1a0634ad9d129c6f",
        "type": "debug",
        "z": "e80c72b156706da5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 870,
        "y": 1280,
        "wires": []
    },
    {
        "id": "c0bca15ea9709733",
        "type": "inject",
        "z": "e0bafcfefd943e69",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "a32f70e13c04bb9e",
                "5a5cb5af219411b1",
                "3896f18e9d86752e",
                "94f043a489366663",
                "997aef053156143c",
                "03666c63ec055819",
                "87339dd5fade3127",
                "b98793b7626b13d3"
            ]
        ]
    },
    {
        "id": "b18f444a26a6c4ad",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 100,
        "wires": [
            [
                "7ad19eacbd3c9d32"
            ],
            [
                "7ad19eacbd3c9d32"
            ],
            []
        ]
    },
    {
        "id": "7d5a93217c236b44",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read1",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "74187e41017c6475"
            ]
        ]
    },
    {
        "id": "7ad19eacbd3c9d32",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 100,
        "wires": []
    },
    {
        "id": "74187e41017c6475",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 100,
        "wires": [
            [
                "b18f444a26a6c4ad"
            ]
        ]
    },
    {
        "id": "34770737e8212e2d",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"rtd0read1\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 60,
        "wires": [
            [
                "861ae71ab47cba0c",
                "f0a14bb6ae37274c"
            ]
        ]
    },
    {
        "id": "861ae71ab47cba0c",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 590,
        "y": 60,
        "wires": [
            [
                "4da47f15e6121a8f"
            ]
        ]
    },
    {
        "id": "4da47f15e6121a8f",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "62c5d23c790e62fb",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 220,
        "wires": [
            [
                "8945596b23da9090"
            ],
            [
                "8945596b23da9090"
            ],
            []
        ]
    },
    {
        "id": "b8d68a05bfd5534b",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read2",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 340,
        "y": 220,
        "wires": [
            [
                "edd879bf3b69f19f"
            ]
        ]
    },
    {
        "id": "8945596b23da9090",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "edd879bf3b69f19f",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 220,
        "wires": [
            [
                "62c5d23c790e62fb"
            ]
        ]
    },
    {
        "id": "89b005c478a670c9",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"rtd0read2\",\n    3,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "8b5483968548d08f",
                "5d3973a05cdf95e6"
            ]
        ]
    },
    {
        "id": "8b5483968548d08f",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "13a3a815a280f892"
            ]
        ]
    },
    {
        "id": "13a3a815a280f892",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 180,
        "wires": []
    },
    {
        "id": "452005d635da9a52",
        "type": "comment",
        "z": "e0bafcfefd943e69",
        "name": "rtd0read1",
        "info": "",
        "x": 300,
        "y": 20,
        "wires": []
    },
    {
        "id": "aa14906f635c94e3",
        "type": "comment",
        "z": "e0bafcfefd943e69",
        "name": "rtd0read2",
        "info": "",
        "x": 300,
        "y": 140,
        "wires": []
    },
    {
        "id": "c0131f837727c2ea",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 340,
        "wires": [
            [
                "0328b37657389217"
            ],
            [
                "0328b37657389217"
            ],
            []
        ]
    },
    {
        "id": "53fb4adf88a46ca1",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read3",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 340,
        "y": 340,
        "wires": [
            [
                "c440ec87cb274c8b"
            ]
        ]
    },
    {
        "id": "0328b37657389217",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 340,
        "wires": []
    },
    {
        "id": "c440ec87cb274c8b",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 340,
        "wires": [
            [
                "c0131f837727c2ea"
            ]
        ]
    },
    {
        "id": "abaa86564df6653d",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"rtd0read3\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 300,
        "wires": [
            [
                "91a0fd980ee2323b",
                "146b7b59ca26fced"
            ]
        ]
    },
    {
        "id": "91a0fd980ee2323b",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 590,
        "y": 300,
        "wires": [
            [
                "2f42b6e7d91c36e1"
            ]
        ]
    },
    {
        "id": "2f42b6e7d91c36e1",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "f6de43078bce5748",
        "type": "comment",
        "z": "e0bafcfefd943e69",
        "name": "rtd0read3",
        "info": "",
        "x": 300,
        "y": 260,
        "wires": []
    },
    {
        "id": "910411d1d78ce4b3",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 460,
        "wires": [
            [
                "a91481b18beba88f"
            ],
            [
                "a91481b18beba88f"
            ],
            []
        ]
    },
    {
        "id": "5796f8a22703efd0",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read4",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 340,
        "y": 460,
        "wires": [
            [
                "cac619820fa413c3"
            ]
        ]
    },
    {
        "id": "a91481b18beba88f",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "cac619820fa413c3",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 460,
        "wires": [
            [
                "910411d1d78ce4b3"
            ]
        ]
    },
    {
        "id": "156dfdde1fdc3c2a",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"rtd0read4\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 420,
        "wires": [
            [
                "fdc8af6fb01f1e7c",
                "1668804fd7dc46ad"
            ]
        ]
    },
    {
        "id": "fdc8af6fb01f1e7c",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 590,
        "y": 420,
        "wires": [
            [
                "d2d072199945d7bc"
            ]
        ]
    },
    {
        "id": "d2d072199945d7bc",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 420,
        "wires": []
    },
    {
        "id": "8bd1c42d9f360891",
        "type": "comment",
        "z": "e0bafcfefd943e69",
        "name": "rtd0read4",
        "info": "",
        "x": 300,
        "y": 380,
        "wires": []
    },
    {
        "id": "c65f022201948b91",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 580,
        "wires": [
            [
                "3edef69d4397d7ef"
            ],
            [
                "3edef69d4397d7ef"
            ],
            []
        ]
    },
    {
        "id": "736301761d10e877",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read5",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 340,
        "y": 580,
        "wires": [
            [
                "1ebde6e8c5c6ba29"
            ]
        ]
    },
    {
        "id": "3edef69d4397d7ef",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 580,
        "wires": []
    },
    {
        "id": "1ebde6e8c5c6ba29",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 580,
        "wires": [
            [
                "c65f022201948b91"
            ]
        ]
    },
    {
        "id": "0720054f6d6f54a0",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"rtd0read5\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 540,
        "wires": [
            [
                "78080edd9d375efb",
                "127b8404b3937cf4"
            ]
        ]
    },
    {
        "id": "78080edd9d375efb",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "85d21776045f9084"
            ]
        ]
    },
    {
        "id": "85d21776045f9084",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 540,
        "wires": []
    },
    {
        "id": "e1b9f1cf11ec2d96",
        "type": "comment",
        "z": "e0bafcfefd943e69",
        "name": "rtd0read5",
        "info": "",
        "x": 300,
        "y": 500,
        "wires": []
    },
    {
        "id": "6be923e84983a597",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 700,
        "wires": [
            [
                "6f6ec3252ed480f5"
            ],
            [
                "6f6ec3252ed480f5"
            ],
            []
        ]
    },
    {
        "id": "7e34929ab0183d39",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read6",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 340,
        "y": 700,
        "wires": [
            [
                "73a2b5a083542a2d"
            ]
        ]
    },
    {
        "id": "6f6ec3252ed480f5",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 700,
        "wires": []
    },
    {
        "id": "73a2b5a083542a2d",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 700,
        "wires": [
            [
                "6be923e84983a597"
            ]
        ]
    },
    {
        "id": "b9f596490ecb168e",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"rtd0read6\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 660,
        "wires": [
            [
                "93c61c65432bd108",
                "018e719088b5bc34"
            ]
        ]
    },
    {
        "id": "93c61c65432bd108",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 590,
        "y": 660,
        "wires": [
            [
                "fbf49dd1ebea4cdf"
            ]
        ]
    },
    {
        "id": "fbf49dd1ebea4cdf",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 660,
        "wires": []
    },
    {
        "id": "ff0b048e5e2866aa",
        "type": "comment",
        "z": "e0bafcfefd943e69",
        "name": "rtd0read6",
        "info": "",
        "x": 300,
        "y": 620,
        "wires": []
    },
    {
        "id": "e563a3914452c96d",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 820,
        "wires": [
            [
                "68cb21fc46b5ee92"
            ],
            [
                "68cb21fc46b5ee92"
            ],
            []
        ]
    },
    {
        "id": "cffbd5e183045fa0",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read7",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 340,
        "y": 820,
        "wires": [
            [
                "f9b8257321572fc7"
            ]
        ]
    },
    {
        "id": "68cb21fc46b5ee92",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 820,
        "wires": []
    },
    {
        "id": "f9b8257321572fc7",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 820,
        "wires": [
            [
                "e563a3914452c96d"
            ]
        ]
    },
    {
        "id": "ffb9c32aa293f93f",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"rtd0read7\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 780,
        "wires": [
            [
                "24e1d1224c19a22d",
                "4e489e141ce7086e"
            ]
        ]
    },
    {
        "id": "24e1d1224c19a22d",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 590,
        "y": 780,
        "wires": [
            [
                "0e0be60f9592bd2c"
            ]
        ]
    },
    {
        "id": "0e0be60f9592bd2c",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 780,
        "wires": []
    },
    {
        "id": "a9a621b1b4e9d7b9",
        "type": "comment",
        "z": "e0bafcfefd943e69",
        "name": "rtd0read7",
        "info": "",
        "x": 300,
        "y": 740,
        "wires": []
    },
    {
        "id": "c1b3b7e1c33deb78",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 940,
        "wires": [
            [
                "62ecc2c7618aba12"
            ],
            [
                "62ecc2c7618aba12"
            ],
            []
        ]
    },
    {
        "id": "2af652bac1ee4ed7",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read8",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 340,
        "y": 940,
        "wires": [
            [
                "ee18102dbeb5c25c"
            ]
        ]
    },
    {
        "id": "62ecc2c7618aba12",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 940,
        "wires": []
    },
    {
        "id": "ee18102dbeb5c25c",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 940,
        "wires": [
            [
                "c1b3b7e1c33deb78"
            ]
        ]
    },
    {
        "id": "faa950976d820c5f",
        "type": "function",
        "z": "e0bafcfefd943e69",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"rtd0read8\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 900,
        "wires": [
            [
                "9cc928124a0579a5",
                "10c1b52c64450ae3"
            ]
        ]
    },
    {
        "id": "9cc928124a0579a5",
        "type": "redis-command",
        "z": "e0bafcfefd943e69",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 590,
        "y": 900,
        "wires": [
            [
                "aea00c84eb8c073a"
            ]
        ]
    },
    {
        "id": "aea00c84eb8c073a",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 900,
        "wires": []
    },
    {
        "id": "99d28ffaaa68cee8",
        "type": "comment",
        "z": "e0bafcfefd943e69",
        "name": "rtd0read8",
        "info": "",
        "x": 300,
        "y": 860,
        "wires": []
    },
    {
        "id": "a32f70e13c04bb9e",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "rtd 0 read 1",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 60,
        "wires": [
            [
                "34770737e8212e2d"
            ],
            [],
            []
        ]
    },
    {
        "id": "5a5cb5af219411b1",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "rtd 0 read 2",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "89b005c478a670c9"
            ],
            [],
            []
        ]
    },
    {
        "id": "3896f18e9d86752e",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "rtd 0 read 3",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 300,
        "wires": [
            [
                "abaa86564df6653d"
            ],
            [],
            []
        ]
    },
    {
        "id": "94f043a489366663",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "rtd 0 read 4",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 420,
        "wires": [
            [
                "156dfdde1fdc3c2a"
            ],
            [],
            []
        ]
    },
    {
        "id": "997aef053156143c",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "rtd 0 read 5",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 540,
        "wires": [
            [
                "0720054f6d6f54a0"
            ],
            [],
            []
        ]
    },
    {
        "id": "03666c63ec055819",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "rtd 0 read 6",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "b9f596490ecb168e"
            ],
            [],
            []
        ]
    },
    {
        "id": "87339dd5fade3127",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "rtd 0 read 7",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 780,
        "wires": [
            [
                "ffb9c32aa293f93f"
            ],
            [],
            []
        ]
    },
    {
        "id": "b98793b7626b13d3",
        "type": "exec",
        "z": "e0bafcfefd943e69",
        "command": "rtd 0 read 8",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 310,
        "y": 900,
        "wires": [
            [
                "faa950976d820c5f"
            ],
            [],
            []
        ]
    },
    {
        "id": "10c1b52c64450ae3",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 860,
        "wires": []
    },
    {
        "id": "4e489e141ce7086e",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 740,
        "wires": []
    },
    {
        "id": "018e719088b5bc34",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 620,
        "wires": []
    },
    {
        "id": "127b8404b3937cf4",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 500,
        "wires": []
    },
    {
        "id": "1668804fd7dc46ad",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 380,
        "wires": []
    },
    {
        "id": "146b7b59ca26fced",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "5d3973a05cdf95e6",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "f0a14bb6ae37274c",
        "type": "debug",
        "z": "e0bafcfefd943e69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 20,
        "wires": []
    },
    {
        "id": "d33eedcada781533",
        "type": "IND 4-20mA in",
        "z": "158c0205302460dc",
        "name": "",
        "stack": "0",
        "channel": "1",
        "payload": "payload",
        "payloadType": "msg",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "3d9aa9f3ed6b8020"
            ]
        ]
    },
    {
        "id": "f3d909e4c931b57c",
        "type": "inject",
        "z": "158c0205302460dc",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "d33eedcada781533",
                "192ac634c0fde017"
            ]
        ]
    },
    {
        "id": "d873f7074f2ef7b6",
        "type": "exec",
        "z": "158c0205302460dc",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "b60df94ecb819ef3"
            ],
            [
                "b60df94ecb819ef3"
            ],
            []
        ]
    },
    {
        "id": "3c8d2a47c00f9d02",
        "type": "redis-command",
        "z": "158c0205302460dc",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read1",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 360,
        "y": 120,
        "wires": [
            [
                "e5deb67399e40c2b"
            ]
        ]
    },
    {
        "id": "b60df94ecb819ef3",
        "type": "debug",
        "z": "158c0205302460dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 790,
        "y": 120,
        "wires": []
    },
    {
        "id": "e5deb67399e40c2b",
        "type": "function",
        "z": "158c0205302460dc",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 120,
        "wires": [
            [
                "d873f7074f2ef7b6"
            ]
        ]
    },
    {
        "id": "3d9aa9f3ed6b8020",
        "type": "function",
        "z": "158c0205302460dc",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"4to20mAchannel1\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 80,
        "wires": [
            [
                "f1477291aea6b29a",
                "6085c1b2d72596be"
            ]
        ]
    },
    {
        "id": "f1477291aea6b29a",
        "type": "redis-command",
        "z": "158c0205302460dc",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 630,
        "y": 80,
        "wires": [
            [
                "012009c5aa586507"
            ]
        ]
    },
    {
        "id": "012009c5aa586507",
        "type": "debug",
        "z": "158c0205302460dc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 80,
        "wires": []
    },
    {
        "id": "58fa2a961a34d1db",
        "type": "comment",
        "z": "158c0205302460dc",
        "name": "Channel 1",
        "info": "",
        "x": 320,
        "y": 40,
        "wires": []
    },
    {
        "id": "192ac634c0fde017",
        "type": "IND 4-20mA in",
        "z": "158c0205302460dc",
        "name": "",
        "stack": "0",
        "channel": "2",
        "payload": "payload",
        "payloadType": "msg",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "6866f62456fad833"
            ]
        ]
    },
    {
        "id": "fc2a2e17ccef0bb7",
        "type": "exec",
        "z": "158c0205302460dc",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 650,
        "y": 240,
        "wires": [
            [
                "4e63536a0aca980b"
            ],
            [
                "4e63536a0aca980b"
            ],
            []
        ]
    },
    {
        "id": "bd2470dc3bd163f5",
        "type": "redis-command",
        "z": "158c0205302460dc",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read1",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 360,
        "y": 240,
        "wires": [
            [
                "d90609aaf4bc1828"
            ]
        ]
    },
    {
        "id": "4e63536a0aca980b",
        "type": "debug",
        "z": "158c0205302460dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 790,
        "y": 240,
        "wires": []
    },
    {
        "id": "d90609aaf4bc1828",
        "type": "function",
        "z": "158c0205302460dc",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 240,
        "wires": [
            [
                "fc2a2e17ccef0bb7"
            ]
        ]
    },
    {
        "id": "6866f62456fad833",
        "type": "function",
        "z": "158c0205302460dc",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"4to20mAchannel2\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            [
                "22c8af07bc57bf4d",
                "6bdfdb2c23263514"
            ]
        ]
    },
    {
        "id": "22c8af07bc57bf4d",
        "type": "redis-command",
        "z": "158c0205302460dc",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 630,
        "y": 200,
        "wires": [
            [
                "926793dadcd6a638"
            ]
        ]
    },
    {
        "id": "926793dadcd6a638",
        "type": "debug",
        "z": "158c0205302460dc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 200,
        "wires": []
    },
    {
        "id": "5799c7ba1638bc39",
        "type": "comment",
        "z": "158c0205302460dc",
        "name": "Channel 2",
        "info": "",
        "x": 320,
        "y": 160,
        "wires": []
    },
    {
        "id": "6bdfdb2c23263514",
        "type": "debug",
        "z": "158c0205302460dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 160,
        "wires": []
    },
    {
        "id": "6085c1b2d72596be",
        "type": "debug",
        "z": "158c0205302460dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "2e1f83664582238d",
        "type": "IND 0-10V in",
        "z": "9a6149454b900d60",
        "name": "",
        "stack": "0",
        "channel": "1",
        "payload": "payload",
        "payloadType": "msg",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "86c108f15c28e29a"
            ]
        ]
    },
    {
        "id": "efd74c63a99707c0",
        "type": "comment",
        "z": "9a6149454b900d60",
        "name": "Channel 1",
        "info": "",
        "x": 360,
        "y": 80,
        "wires": []
    },
    {
        "id": "551052a432c9e9e7",
        "type": "exec",
        "z": "9a6149454b900d60",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 690,
        "y": 160,
        "wires": [
            [
                "4fa1e5b39ab5b9e5"
            ],
            [
                "4fa1e5b39ab5b9e5"
            ],
            []
        ]
    },
    {
        "id": "04aaef7cb9445163",
        "type": "redis-command",
        "z": "9a6149454b900d60",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read1",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "2849e56b6706e895"
            ]
        ]
    },
    {
        "id": "4fa1e5b39ab5b9e5",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 830,
        "y": 160,
        "wires": []
    },
    {
        "id": "2849e56b6706e895",
        "type": "function",
        "z": "9a6149454b900d60",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 160,
        "wires": [
            [
                "551052a432c9e9e7"
            ]
        ]
    },
    {
        "id": "86c108f15c28e29a",
        "type": "function",
        "z": "9a6149454b900d60",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"0to10Vchannel1\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 120,
        "wires": [
            [
                "a56c1d69bc4f7393",
                "6ccd21a8f7a65ba9"
            ]
        ]
    },
    {
        "id": "a56c1d69bc4f7393",
        "type": "redis-command",
        "z": "9a6149454b900d60",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 670,
        "y": 120,
        "wires": [
            [
                "a3cea2f9af7bc397"
            ]
        ]
    },
    {
        "id": "a3cea2f9af7bc397",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 120,
        "wires": []
    },
    {
        "id": "d36d25fd239a5107",
        "type": "IND 0-10V in",
        "z": "9a6149454b900d60",
        "name": "",
        "stack": "0",
        "channel": "2",
        "payload": "payload",
        "payloadType": "msg",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "3cfadcf647b58fda"
            ]
        ]
    },
    {
        "id": "71ad5bc9cf6b3faa",
        "type": "comment",
        "z": "9a6149454b900d60",
        "name": "Channel 2",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "2e08069595f971b0",
        "type": "exec",
        "z": "9a6149454b900d60",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 690,
        "y": 280,
        "wires": [
            [
                "6f37355264764589"
            ],
            [
                "6f37355264764589"
            ],
            []
        ]
    },
    {
        "id": "230af69944da0192",
        "type": "redis-command",
        "z": "9a6149454b900d60",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read1",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 400,
        "y": 280,
        "wires": [
            [
                "c274b44a291c7490"
            ]
        ]
    },
    {
        "id": "6f37355264764589",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "c274b44a291c7490",
        "type": "function",
        "z": "9a6149454b900d60",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 280,
        "wires": [
            [
                "2e08069595f971b0"
            ]
        ]
    },
    {
        "id": "3cfadcf647b58fda",
        "type": "function",
        "z": "9a6149454b900d60",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"0to10Vchannel2\",\n    2,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 240,
        "wires": [
            [
                "2d423a02b0d87e8d",
                "1ac95db25ee32210"
            ]
        ]
    },
    {
        "id": "2d423a02b0d87e8d",
        "type": "redis-command",
        "z": "9a6149454b900d60",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 670,
        "y": 240,
        "wires": [
            [
                "ac85d8fc2577d42e"
            ]
        ]
    },
    {
        "id": "ac85d8fc2577d42e",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "84548d2e479636e0",
        "type": "IND 0-10V in",
        "z": "9a6149454b900d60",
        "name": "",
        "stack": "0",
        "channel": "3",
        "payload": "payload",
        "payloadType": "msg",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "3f0483b4b1776aef"
            ]
        ]
    },
    {
        "id": "1c85aebe16c7ebb9",
        "type": "comment",
        "z": "9a6149454b900d60",
        "name": "Channel 3",
        "info": "",
        "x": 360,
        "y": 320,
        "wires": []
    },
    {
        "id": "3f92e2bb64084774",
        "type": "exec",
        "z": "9a6149454b900d60",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 690,
        "y": 400,
        "wires": [
            [
                "697e6ebab64d7972"
            ],
            [
                "697e6ebab64d7972"
            ],
            []
        ]
    },
    {
        "id": "c70bb3dfef086d10",
        "type": "redis-command",
        "z": "9a6149454b900d60",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read1",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 400,
        "y": 400,
        "wires": [
            [
                "72d6e60a8edbfcfc"
            ]
        ]
    },
    {
        "id": "697e6ebab64d7972",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "72d6e60a8edbfcfc",
        "type": "function",
        "z": "9a6149454b900d60",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "3f92e2bb64084774"
            ]
        ]
    },
    {
        "id": "3f0483b4b1776aef",
        "type": "function",
        "z": "9a6149454b900d60",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"0to10Vchannel3\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 360,
        "wires": [
            [
                "8b9fbbfd933eb746",
                "63a2e163c9709293"
            ]
        ]
    },
    {
        "id": "8b9fbbfd933eb746",
        "type": "redis-command",
        "z": "9a6149454b900d60",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 670,
        "y": 360,
        "wires": [
            [
                "101b2b4c61efad72"
            ]
        ]
    },
    {
        "id": "101b2b4c61efad72",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 360,
        "wires": []
    },
    {
        "id": "cde5d3f77587d91a",
        "type": "IND 0-10V in",
        "z": "9a6149454b900d60",
        "name": "",
        "stack": "0",
        "channel": "4",
        "payload": "payload",
        "payloadType": "msg",
        "x": 370,
        "y": 480,
        "wires": [
            [
                "305cf9d5e955e143"
            ]
        ]
    },
    {
        "id": "65d6699a0e389c97",
        "type": "comment",
        "z": "9a6149454b900d60",
        "name": "Channel 4",
        "info": "",
        "x": 360,
        "y": 440,
        "wires": []
    },
    {
        "id": "a13150add0b72ae4",
        "type": "exec",
        "z": "9a6149454b900d60",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 690,
        "y": 520,
        "wires": [
            [
                "4888f057b7480aba"
            ],
            [
                "4888f057b7480aba"
            ],
            []
        ]
    },
    {
        "id": "f11723ea1d7bae5c",
        "type": "redis-command",
        "z": "9a6149454b900d60",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read1",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 400,
        "y": 520,
        "wires": [
            [
                "176d29b41cc30730"
            ]
        ]
    },
    {
        "id": "4888f057b7480aba",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 830,
        "y": 520,
        "wires": []
    },
    {
        "id": "176d29b41cc30730",
        "type": "function",
        "z": "9a6149454b900d60",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nconst timeIsIt = Math.floor(Date.now()/1000)\nconst timeIsItInMilli = Date.now()\nnewMsg.payload = `bash ~/rrd/bash/update.sh ${timeIsIt}:${newMsg.payload}`\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 520,
        "wires": [
            [
                "a13150add0b72ae4"
            ]
        ]
    },
    {
        "id": "305cf9d5e955e143",
        "type": "function",
        "z": "9a6149454b900d60",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"0to10Vchannel4\",\n    5,\n    parseFloat(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "d4d2e0944f1e601c",
                "df432ffeb4e7b682"
            ]
        ]
    },
    {
        "id": "d4d2e0944f1e601c",
        "type": "redis-command",
        "z": "9a6149454b900d60",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 670,
        "y": 480,
        "wires": [
            [
                "b65f73f21d414a8b"
            ]
        ]
    },
    {
        "id": "b65f73f21d414a8b",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 480,
        "wires": []
    },
    {
        "id": "a1867d819b594a4d",
        "type": "inject",
        "z": "9a6149454b900d60",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "2e1f83664582238d",
                "d36d25fd239a5107",
                "84548d2e479636e0",
                "cde5d3f77587d91a"
            ]
        ]
    },
    {
        "id": "df432ffeb4e7b682",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 440,
        "wires": []
    },
    {
        "id": "63a2e163c9709293",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 320,
        "wires": []
    },
    {
        "id": "1ac95db25ee32210",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 200,
        "wires": []
    },
    {
        "id": "6ccd21a8f7a65ba9",
        "type": "debug",
        "z": "9a6149454b900d60",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "e32649d1a5a12c4c",
        "type": "mqtt in",
        "z": "295a8801690aa9cf",
        "name": "",
        "topic": "sensors/alarms/thresholds",
        "qos": "1",
        "datatype": "auto",
        "broker": "5a051fab.6f842",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "6e6f3288048163ef"
            ]
        ]
    },
    {
        "id": "6e6f3288048163ef",
        "type": "function",
        "z": "295a8801690aa9cf",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "98c2367d15465f37",
                "2c63c59415f90d0b"
            ]
        ]
    },
    {
        "id": "f8027d9c7621d054",
        "type": "mqtt out",
        "z": "295a8801690aa9cf",
        "name": "",
        "topic": "sensors/alarms/thresholds",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 520,
        "y": 120,
        "wires": []
    },
    {
        "id": "d8531b909c06e480",
        "type": "inject",
        "z": "295a8801690aa9cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "78ef8bc08fdcf865"
            ]
        ]
    },
    {
        "id": "78ef8bc08fdcf865",
        "type": "function",
        "z": "295a8801690aa9cf",
        "name": "",
        "func": "msg.payload = {\n    \"rsvrOilTempMajorThreshold\": 1001,\n    \"rsvrOilTempCriticalThreshold\": 1006,\n    \"tankOilTempMajorThreshold\": 1001,\n    \"tankOilTempCriticalThreshold\": 1006\n};\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 120,
        "wires": [
            [
                "f8027d9c7621d054"
            ]
        ]
    },
    {
        "id": "6667f46818b4152f",
        "type": "comment",
        "z": "295a8801690aa9cf",
        "name": "Thresholds",
        "info": "",
        "x": 100,
        "y": 80,
        "wires": []
    },
    {
        "id": "98c2367d15465f37",
        "type": "file in",
        "z": "295a8801690aa9cf",
        "name": "",
        "filename": "server/config/thresholds.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 240,
        "y": 240,
        "wires": [
            [
                "a791ca0ef31173f3"
            ]
        ]
    },
    {
        "id": "9e5b616ebb999284",
        "type": "function",
        "z": "295a8801690aa9cf",
        "name": "",
        "func": "const read = JSON.parse(msg.payload['read'])\nconst write = JSON.parse(msg.payload['write'])\n\nmsg.topic = 'sensors:alarms:thresholds'\nmsg.payload = Object.assign(read, write)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 180,
        "wires": [
            [
                "23df556c1467b5e9"
            ]
        ]
    },
    {
        "id": "a791ca0ef31173f3",
        "type": "function",
        "z": "295a8801690aa9cf",
        "name": "",
        "func": "msg.topic = 'read'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 240,
        "wires": [
            [
                "6b41fed24c984924"
            ]
        ]
    },
    {
        "id": "6b41fed24c984924",
        "type": "join",
        "z": "295a8801690aa9cf",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 710,
        "y": 180,
        "wires": [
            [
                "9e5b616ebb999284"
            ]
        ]
    },
    {
        "id": "23df556c1467b5e9",
        "type": "file",
        "z": "295a8801690aa9cf",
        "name": "",
        "filename": "server/config/thresholds.json",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 860,
        "y": 240,
        "wires": [
            [
                "ef1dfd0c5fd4ba7c"
            ]
        ]
    },
    {
        "id": "2c63c59415f90d0b",
        "type": "function",
        "z": "295a8801690aa9cf",
        "name": "",
        "func": "msg.topic = 'write'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "6b41fed24c984924"
            ]
        ]
    },
    {
        "id": "ef1dfd0c5fd4ba7c",
        "type": "function",
        "z": "295a8801690aa9cf",
        "name": "format",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    'sensors:alarms:thresholds',\n    JSON.stringify(newMsg.payload)\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 320,
        "wires": [
            [
                "1694270ee3ab1621",
                "5acd7375e1b7cb98"
            ]
        ]
    },
    {
        "id": "1694270ee3ab1621",
        "type": "redis-command",
        "z": "295a8801690aa9cf",
        "server": "ef790b5f.ecc138",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 780,
        "y": 320,
        "wires": [
            [
                "0ec4162ae72bd010"
            ]
        ]
    },
    {
        "id": "0ec4162ae72bd010",
        "type": "debug",
        "z": "295a8801690aa9cf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 930,
        "y": 320,
        "wires": []
    },
    {
        "id": "5acd7375e1b7cb98",
        "type": "debug",
        "z": "295a8801690aa9cf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 280,
        "wires": []
    },
    {
        "id": "61c02b9d78e2bd10",
        "type": "IND OPT in",
        "z": "351987a7606fd47b",
        "name": "",
        "stack": "0",
        "channel": "1",
        "payload": "payload",
        "payloadType": "msg",
        "x": 270,
        "y": 140,
        "wires": [
            [
                "0d0bc2c3bf367d2c"
            ]
        ]
    },
    {
        "id": "b2d13ae445418dc5",
        "type": "comment",
        "z": "351987a7606fd47b",
        "name": "oilLevelLow",
        "info": "",
        "x": 270,
        "y": 100,
        "wires": []
    },
    {
        "id": "cf44fc6b0fc5dd54",
        "type": "inject",
        "z": "351987a7606fd47b",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 70,
        "y": 20,
        "wires": [
            [
                "1309c061376876d0",
                "f492a301f0cfb58c",
                "5893c067e8695602",
                "8dd2ca5a5dc6d833",
                "d2f662dd6cd4c952",
                "9a59be0f053349b5",
                "61c02b9d78e2bd10"
            ]
        ]
    },
    {
        "id": "8dd2ca5a5dc6d833",
        "type": "IND OPT in",
        "z": "351987a7606fd47b",
        "name": "",
        "stack": "0",
        "channel": "2",
        "payload": "payload",
        "payloadType": "msg",
        "x": 270,
        "y": 960,
        "wires": [
            [
                "b5dfd01b4744e6d9"
            ]
        ]
    },
    {
        "id": "882e70923d16c3dc",
        "type": "comment",
        "z": "351987a7606fd47b",
        "name": "OFF if true",
        "info": "",
        "x": 260,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a3bf5dd15126f14f",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "set topic",
        "func": "// msg.payload = true // for testing\n// msg.topic = \"pdu:power:state\"\nconst powerSensorOn = msg.payload['powerSensorOn']\nconst powerSensorOff = msg.payload['powerSensorOff']\nconst powerState = msg.payload['powerState']\n\nif (powerState == 2 && powerSensorOff == false) {\n    msg.payload = 2\n} else if (powerSensorOn == true && powerState !== 2) {\n    msg.payload = 11\n} else if (powerSensorOff == true){\n    msg.payload = 10\n}\n\n// msg.payload = [\n//     \"pdu:power:state\",\n//     msg.payload\n// ]\n\nnewMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"pdu:power:state\",\n    5,\n    newMsg.payload\n]\nreturn newMsg;\n\n// return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1040,
        "wires": [
            [
                "2e6ca11eecdbfd74",
                "621424578f5d92aa"
            ]
        ]
    },
    {
        "id": "0d0bc2c3bf367d2c",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "payload for test",
        "func": "\n// msg.payload = true // FOR TESTING\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 140,
        "wires": [
            [
                "88f4338a2d2bf7b9",
                "b6d54c0fb6f45cd7",
                "0651750ff49567f7"
            ]
        ]
    },
    {
        "id": "abd601e69b941e64",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1120,
        "wires": []
    },
    {
        "id": "621424578f5d92aa",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 670,
        "y": 1080,
        "wires": [
            [
                "abd601e69b941e64"
            ]
        ]
    },
    {
        "id": "2e6ca11eecdbfd74",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9a59be0f053349b5",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "pdu:power:state",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 320,
        "y": 1120,
        "wires": [
            [
                "ac3acf2e6cfcbd0e"
            ]
        ]
    },
    {
        "id": "e7eb8730223b5b98",
        "type": "join",
        "z": "351987a7606fd47b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "a3bf5dd15126f14f"
            ]
        ]
    },
    {
        "id": "b5dfd01b4744e6d9",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "set topic",
        "func": "msg.topic = \"powerSensorOn\"\n// msg.payload = true // FOR TESTING\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 960,
        "wires": [
            [
                "e7eb8730223b5b98",
                "0d2eefb8f443defb",
                "ebf6af166d5fb362"
            ]
        ]
    },
    {
        "id": "ac3acf2e6cfcbd0e",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "set topic",
        "func": "msg.topic = \"powerState\"\nmsg.payload = parseInt(msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1120,
        "wires": [
            [
                "e7eb8730223b5b98",
                "c29c01f5e6b8607c"
            ]
        ]
    },
    {
        "id": "5a74628747a71caf",
        "type": "comment",
        "z": "351987a7606fd47b",
        "name": "Check if tripped",
        "info": "",
        "x": 280,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c29c01f5e6b8607c",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d2f662dd6cd4c952",
        "type": "IND OPT in",
        "z": "351987a7606fd47b",
        "name": "",
        "stack": "0",
        "channel": "3",
        "payload": "payload",
        "payloadType": "msg",
        "x": 270,
        "y": 1040,
        "wires": [
            [
                "981b00331a30d02b"
            ]
        ]
    },
    {
        "id": "981b00331a30d02b",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "set topic",
        "func": "msg.topic = \"powerSensorOff\"\n// msg.payload = true // FOR TESTING\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1040,
        "wires": [
            [
                "e7eb8730223b5b98",
                "ebf6af166d5fb362"
            ]
        ]
    },
    {
        "id": "15a1296e4b55c96d",
        "type": "comment",
        "z": "351987a7606fd47b",
        "name": "ON if true",
        "info": "",
        "x": 260,
        "y": 920,
        "wires": []
    },
    {
        "id": "061ed2d884415548",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "evalulate",
        "func": "if (msg.payload == true) {\n    msg.payload = 2\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 140,
        "wires": [
            [
                "3451908cf32cce31"
            ]
        ]
    },
    {
        "id": "3451908cf32cce31",
        "type": "mqtt out",
        "z": "351987a7606fd47b",
        "name": "",
        "topic": "pdu/power/state",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 1240,
        "y": 140,
        "wires": []
    },
    {
        "id": "6bcb5c48fe407024",
        "type": "rbe",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 140,
        "wires": [
            [
                "061ed2d884415548"
            ]
        ]
    },
    {
        "id": "7f5521d243b55d32",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "INCR",
        "name": "counter:oilLevelLow",
        "topic": "counter:oilLevelLow",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 800,
        "y": 100,
        "wires": [
            [
                "f30905347a8d394c",
                "1659fbac4d5804c5"
            ]
        ]
    },
    {
        "id": "88f4338a2d2bf7b9",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "if (!msg.payload) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 140,
        "wires": [
            [
                "7f5521d243b55d32"
            ]
        ]
    },
    {
        "id": "b6d54c0fb6f45cd7",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "redis payload",
        "func": "if (msg.payload == true) {\n    newMsg ={payload: msg.payload};\n    newMsg.payload = [\n        \"counter:oilLevelLow\",\n        5,\n        0\n    ]\n    return newMsg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 60,
        "wires": [
            [
                "4631bbe0df9c18ce",
                "e219293c775b2f6c"
            ]
        ]
    },
    {
        "id": "e219293c775b2f6c",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 900,
        "y": 60,
        "wires": [
            [
                "113243dbd11b534c"
            ]
        ]
    },
    {
        "id": "113243dbd11b534c",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1070,
        "y": 60,
        "wires": []
    },
    {
        "id": "4631bbe0df9c18ce",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 900,
        "y": 20,
        "wires": []
    },
    {
        "id": "f30905347a8d394c",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "evalulate",
        "func": "if (msg.payload > 30) {\n    msg.payload = true\n} else {\n    msg.payload = false\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 140,
        "wires": [
            [
                "6bcb5c48fe407024"
            ]
        ]
    },
    {
        "id": "1659fbac4d5804c5",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 100,
        "wires": []
    },
    {
        "id": "0651750ff49567f7",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "redis payload",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"sensor:oilLevelLow\",\n    5,\n    (!newMsg.payload) ? 6 : 0\n]\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "7561f4f376c8057a",
                "fa16ae9faa0dce18",
                "af76cdb33ca392d3"
            ]
        ]
    },
    {
        "id": "7561f4f376c8057a",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 620,
        "y": 180,
        "wires": [
            [
                "d745c792ac44705a"
            ]
        ]
    },
    {
        "id": "fa16ae9faa0dce18",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 220,
        "wires": []
    },
    {
        "id": "d745c792ac44705a",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 180,
        "wires": []
    },
    {
        "id": "df7a76c0d876e41a",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "trip if true",
        "func": "if (msg.payload == 5) {\n    msg.payload = 2 // Trip Breaker\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 820,
        "wires": [
            [
                "e74a296d9a5ba950"
            ]
        ]
    },
    {
        "id": "e74a296d9a5ba950",
        "type": "mqtt out",
        "z": "351987a7606fd47b",
        "name": "",
        "topic": "pdu/power/state",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 1160,
        "y": 820,
        "wires": []
    },
    {
        "id": "d8cc21e4ca8a096d",
        "type": "rbe",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 850,
        "y": 820,
        "wires": [
            [
                "df7a76c0d876e41a"
            ]
        ]
    },
    {
        "id": "783b7b21497c81bb",
        "type": "comment",
        "z": "351987a7606fd47b",
        "name": "rsvrOilTemp",
        "info": "",
        "x": 270,
        "y": 620,
        "wires": []
    },
    {
        "id": "5893c067e8695602",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read5",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 300,
        "y": 660,
        "wires": [
            [
                "3bd741e9a54d89fd"
            ]
        ]
    },
    {
        "id": "a53385db5f3f6d08",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "evaluate condition",
        "func": "const rsvrOilTemp = parseFloat(msg.payload['rsvrOilTemp'])\nconst major = parseFloat(msg.payload['major'])\nconst critical = parseFloat(msg.payload['critical'])\n\nif (rsvrOilTemp >= critical) {\n    msg.payload = 5;\n} else if (rsvrOilTemp >= major) {\n    msg.payload = 4;\n} else {\n    msg.payload = 0;\n}\n\n// msg.payload = true // FOR TESTING\n// msg.topic = \"oilTempHigh\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 700,
        "wires": [
            [
                "3eefc2598dc8d2ac",
                "1329cda9c9ec7867",
                "b8eb95dbcdd6f976",
                "e9a2ed556cacc711"
            ]
        ]
    },
    {
        "id": "3bd741e9a54d89fd",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "set topic",
        "func": "msg.topic = \"rsvrOilTemp\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 660,
        "wires": [
            [
                "84b1d21ef52837e9"
            ]
        ]
    },
    {
        "id": "b2f99f74ec65a6c2",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "threshold critical",
        "func": "msg.topic = \"critical\"\nconst payload = JSON.parse(msg.payload)\n\nmsg.payload = parseFloat(payload['rsvrOilTempCriticalThreshold'])\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 780,
        "wires": [
            [
                "84b1d21ef52837e9"
            ]
        ]
    },
    {
        "id": "935acd05a40ac6db",
        "type": "comment",
        "z": "351987a7606fd47b",
        "name": "rsvrOilTemp thresholds",
        "info": "",
        "x": 300,
        "y": 700,
        "wires": []
    },
    {
        "id": "84b1d21ef52837e9",
        "type": "join",
        "z": "351987a7606fd47b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 554.765625,
        "y": 701.75,
        "wires": [
            [
                "a53385db5f3f6d08",
                "6fef857b8aabae5f"
            ]
        ]
    },
    {
        "id": "3eefc2598dc8d2ac",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "redis state",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"sensor:rsvrOilTemp\",\n    5,\n    newMsg.payload\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 660,
        "wires": [
            [
                "5db2ba44ea440f5c",
                "1055cbd5884f94d8"
            ]
        ]
    },
    {
        "id": "1055cbd5884f94d8",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1080,
        "y": 660,
        "wires": [
            [
                "17c2df990c8949ca"
            ]
        ]
    },
    {
        "id": "17c2df990c8949ca",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1250,
        "y": 660,
        "wires": []
    },
    {
        "id": "5db2ba44ea440f5c",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1080,
        "y": 620,
        "wires": []
    },
    {
        "id": "150f179302757c06",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "trip if true",
        "func": "if (msg.payload == 5) {\n    msg.payload = 2 // Trip Breaker\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 500,
        "wires": [
            [
                "be87641eed950a3e"
            ]
        ]
    },
    {
        "id": "be87641eed950a3e",
        "type": "mqtt out",
        "z": "351987a7606fd47b",
        "name": "",
        "topic": "pdu/power/state",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 1160,
        "y": 500,
        "wires": []
    },
    {
        "id": "2f6b080f5b20147b",
        "type": "comment",
        "z": "351987a7606fd47b",
        "name": "tankOilTemp",
        "info": "",
        "x": 270,
        "y": 300,
        "wires": []
    },
    {
        "id": "1309c061376876d0",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "rtd0read6",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 300,
        "y": 340,
        "wires": [
            [
                "ae8ba5776526e2c8"
            ]
        ]
    },
    {
        "id": "5e72907d735b6d96",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "evaluate condition",
        "func": "const tankOilTemp = parseFloat(msg.payload['tankOilTemp']);\nconst major = parseFloat(msg.payload['major']);\nconst critical = parseFloat(msg.payload['critical']);\n\nif (tankOilTemp >= critical) {\n    msg.payload = 5;\n} else if (tankOilTemp >= major) {\n    msg.payload = 4;\n} else {\n    msg.payload = 0;\n}\n\n// msg.payload = true // FOR TESTING\n// msg.topic = \"oilTempHigh\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 380,
        "wires": [
            [
                "2912ac080bcb6af4",
                "9cdb7c6b97cee5bf",
                "bf24643d24f15cc6",
                "283b9db8c57ee588"
            ]
        ]
    },
    {
        "id": "ae8ba5776526e2c8",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "set topic",
        "func": "msg.topic = \"tankOilTemp\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 340,
        "wires": [
            [
                "5ea9e87296b1e412"
            ]
        ]
    },
    {
        "id": "d2a430e274858b58",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "threshold critical",
        "func": "msg.topic = \"critical\"\nconst payload = JSON.parse(msg.payload)\n\nmsg.payload = parseFloat(payload['tankOilTempCriticalThreshold'])\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 460,
        "wires": [
            [
                "5ea9e87296b1e412"
            ]
        ]
    },
    {
        "id": "3bcfcfb497687e1c",
        "type": "comment",
        "z": "351987a7606fd47b",
        "name": "tankOilTemp thresholds",
        "info": "",
        "x": 300,
        "y": 380,
        "wires": []
    },
    {
        "id": "5ea9e87296b1e412",
        "type": "join",
        "z": "351987a7606fd47b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 554.765625,
        "y": 381.75,
        "wires": [
            [
                "5e72907d735b6d96",
                "6fef857b8aabae5f"
            ]
        ]
    },
    {
        "id": "2912ac080bcb6af4",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "redis state",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"sensor:tankOilTemp\",\n    5,\n    newMsg.payload\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 340,
        "wires": [
            [
                "ceeefc09601711af",
                "eeaa8391063cf0f7"
            ]
        ]
    },
    {
        "id": "eeaa8391063cf0f7",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "907c55fa9c76560f"
            ]
        ]
    },
    {
        "id": "907c55fa9c76560f",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1230,
        "y": 340,
        "wires": []
    },
    {
        "id": "ceeefc09601711af",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1070,
        "y": 300,
        "wires": []
    },
    {
        "id": "f492a301f0cfb58c",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "GET",
        "name": "",
        "topic": "sensors:alarms:thresholds",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 350,
        "y": 540,
        "wires": [
            [
                "d2a430e274858b58",
                "b2f99f74ec65a6c2",
                "1c98979d5bc0ee0c",
                "082c0cad2d46fbb3"
            ]
        ]
    },
    {
        "id": "6fef857b8aabae5f",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 670,
        "y": 540,
        "wires": []
    },
    {
        "id": "1c98979d5bc0ee0c",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "threshold major",
        "func": "msg.topic = \"major\"\nconst payload = JSON.parse(msg.payload)\n\nmsg.payload = parseFloat(payload['tankOilTempMajorThreshold'])\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 420,
        "wires": [
            [
                "5ea9e87296b1e412"
            ]
        ]
    },
    {
        "id": "082c0cad2d46fbb3",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "threshold major",
        "func": "msg.topic = \"major\"\nconst payload = JSON.parse(msg.payload)\n\nmsg.payload = parseFloat(payload['rsvrOilTempMajorThreshold'])\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 740,
        "wires": [
            [
                "84b1d21ef52837e9"
            ]
        ]
    },
    {
        "id": "9cdb7c6b97cee5bf",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "increment counter",
        "func": "if (msg.payload == 5) {\n    msg.topic = 'counter:tankOilTemp'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 420,
        "wires": [
            [
                "ae7949e1475faa55"
            ]
        ]
    },
    {
        "id": "ae7949e1475faa55",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "INCR",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 830,
        "y": 460,
        "wires": [
            [
                "d672fbba52235f9e",
                "648c37155e4d6703"
            ]
        ]
    },
    {
        "id": "d672fbba52235f9e",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 460,
        "wires": []
    },
    {
        "id": "648c37155e4d6703",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "check count",
        "func": "if (msg.payload > 30) {\n    msg.payload = 5\n} else {\n    msg.payload = 0\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 460,
        "wires": [
            [
                "eb2bb625baa2a94d"
            ]
        ]
    },
    {
        "id": "bf24643d24f15cc6",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "reset counter",
        "func": "if (msg.payload !== 5) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 380,
        "wires": [
            [
                "1ea174e37531a3c2"
            ]
        ]
    },
    {
        "id": "1ea174e37531a3c2",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "redis payload",
        "func": "redMsg ={payload: msg.payload};\nredMsg.payload = [\n    \"counter:tankOilTemp\",\n    5,\n    0\n]\nreturn redMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 380,
        "wires": [
            [
                "15b8855f300d7a15",
                "9cbbbacabc085629"
            ]
        ]
    },
    {
        "id": "9cbbbacabc085629",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1150,
        "y": 420,
        "wires": [
            [
                "28b0492712bebe64"
            ]
        ]
    },
    {
        "id": "15b8855f300d7a15",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1260,
        "y": 380,
        "wires": []
    },
    {
        "id": "28b0492712bebe64",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1310,
        "y": 420,
        "wires": []
    },
    {
        "id": "eb2bb625baa2a94d",
        "type": "rbe",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 850,
        "y": 500,
        "wires": [
            [
                "150f179302757c06"
            ]
        ]
    },
    {
        "id": "1329cda9c9ec7867",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "reset counter",
        "func": "if (msg.payload !== 5) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 700,
        "wires": [
            [
                "1cb6892c5c2bae2e"
            ]
        ]
    },
    {
        "id": "1cb6892c5c2bae2e",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "redis payload",
        "func": "redMsg ={payload: msg.payload};\nredMsg.payload = [\n    \"counter:rsvrOilTemp\",\n    5,\n    0\n]\nreturn redMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 700,
        "wires": [
            [
                "917841e1c8613186",
                "9559c2a95ff225b9"
            ]
        ]
    },
    {
        "id": "9559c2a95ff225b9",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "SETEX",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1150,
        "y": 740,
        "wires": [
            [
                "463a88fdbf8d1b58"
            ]
        ]
    },
    {
        "id": "463a88fdbf8d1b58",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1310,
        "y": 740,
        "wires": []
    },
    {
        "id": "917841e1c8613186",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1260,
        "y": 700,
        "wires": []
    },
    {
        "id": "0c041b5cf868d203",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "INCR",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 830,
        "y": 780,
        "wires": [
            [
                "22814c8a069a835d",
                "6354d4332bc75d46"
            ]
        ]
    },
    {
        "id": "6354d4332bc75d46",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "check count",
        "func": "if (msg.payload > 30) {\n    msg.payload = 5\n} else {\n    msg.payload = 0\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 780,
        "wires": [
            [
                "d8cc21e4ca8a096d"
            ]
        ]
    },
    {
        "id": "22814c8a069a835d",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 780,
        "wires": []
    },
    {
        "id": "b8eb95dbcdd6f976",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "increment counter",
        "func": "if (msg.payload == 5) {\n    msg.topic = 'counter:rsvrOilTemp'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 740,
        "wires": [
            [
                "0c041b5cf868d203"
            ]
        ]
    },
    {
        "id": "0d2eefb8f443defb",
        "type": "rbe",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 960,
        "wires": [
            [
                "7512167530f051c9"
            ]
        ]
    },
    {
        "id": "7de3e27e7cb8c95f",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 960,
        "wires": []
    },
    {
        "id": "7512167530f051c9",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "if (msg.payload == true) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 960,
        "wires": [
            [
                "7de3e27e7cb8c95f",
                "01635bc8aba2aa36",
                "791069c5a0281802",
                "e02cb8a035de628a"
            ]
        ]
    },
    {
        "id": "01635bc8aba2aa36",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "redis payload",
        "func": "redMsg ={payload: msg.payload};\nredMsg.payload = [\n    \"counter:rsvrOilTemp\",\n    0\n]\nreturn redMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1000,
        "wires": [
            [
                "3f357f8b681c43b2",
                "0902100ebedf9011"
            ]
        ]
    },
    {
        "id": "0902100ebedf9011",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1100,
        "y": 1040,
        "wires": [
            [
                "613cd6197c798753"
            ]
        ]
    },
    {
        "id": "613cd6197c798753",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1250,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3f357f8b681c43b2",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1220,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1e5a94b71ba10fec",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1100,
        "y": 1120,
        "wires": [
            [
                "eed616701f71771e"
            ]
        ]
    },
    {
        "id": "791069c5a0281802",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "redis payload",
        "func": "redMsg ={payload: msg.payload};\nredMsg.payload = [\n    \"counter:tankOilTemp\",\n    0\n]\nreturn redMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1080,
        "wires": [
            [
                "a50bd15958239fa5",
                "1e5a94b71ba10fec"
            ]
        ]
    },
    {
        "id": "eed616701f71771e",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1250,
        "y": 1120,
        "wires": []
    },
    {
        "id": "a50bd15958239fa5",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1220,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e02cb8a035de628a",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "redis payload",
        "func": "newMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"counter:oilLevelLow\",\n    0\n]\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1160,
        "wires": [
            [
                "a4c1b5c8699dbd7f",
                "6c5cd20e0be19adc"
            ]
        ]
    },
    {
        "id": "6c5cd20e0be19adc",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1100,
        "y": 1200,
        "wires": [
            [
                "dd57bda2f15e8440"
            ]
        ]
    },
    {
        "id": "dd57bda2f15e8440",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1250,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a4c1b5c8699dbd7f",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1190,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d2b54c3ba8daada8",
        "type": "comment",
        "z": "351987a7606fd47b",
        "name": "Reset Trip Counters",
        "info": "",
        "x": 870,
        "y": 920,
        "wires": []
    },
    {
        "id": "ebf6af166d5fb362",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 900,
        "wires": []
    },
    {
        "id": "af76cdb33ca392d3",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "if (msg.payload[1] == 6) {\n    msg.payload = JSON.stringify({\n        priority: \"critical\",\n        applicaiton: \"node-red\",\n        message: \"Oil Level Low\"\n    });\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 220,
        "wires": [
            [
                "89c0d83ed3f3a540"
            ]
        ]
    },
    {
        "id": "89c0d83ed3f3a540",
        "type": "mqtt out",
        "z": "351987a7606fd47b",
        "name": "",
        "topic": "logging/alarm/INFO",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 450,
        "y": 220,
        "wires": []
    },
    {
        "id": "283b9db8c57ee588",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "if (msg.payload == 4) {\n    msg.payload = JSON.stringify({\n        priority: \"MAJOR\",\n        applicaiton: \"node-red\",\n        message: \"Tank Oil Temp Major\"\n    });\n    return msg;\n}\n\nif (msg.payload == 5) {\n    msg.payload = JSON.stringify({\n        priority: \"CRITICAL\",\n        applicaiton: \"node-red\",\n        message: \"Tank Oil Temp Critical\"\n    });\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 280,
        "wires": [
            [
                "5210a0fe0c029b26"
            ]
        ]
    },
    {
        "id": "5210a0fe0c029b26",
        "type": "mqtt out",
        "z": "351987a7606fd47b",
        "name": "",
        "topic": "logging/alarm/INFO",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 870,
        "y": 280,
        "wires": []
    },
    {
        "id": "e9a2ed556cacc711",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "if (msg.payload == 4) {\n    msg.payload = JSON.stringify({\n        priority: \"MAJOR\",\n        applicaiton: \"node-red\",\n        message: \"Reservoir Oil Temp Major\"\n    });\n    return msg;\n}\n\nif (msg.payload == 5) {\n    msg.payload = JSON.stringify({\n        priority: \"CRITICAL\",\n        applicaiton: \"node-red\",\n        message: \"Reservoir Oil Temp Critical\"\n    });\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 620,
        "wires": [
            [
                "1409b14eb69eff9d"
            ]
        ]
    },
    {
        "id": "1409b14eb69eff9d",
        "type": "mqtt out",
        "z": "351987a7606fd47b",
        "name": "",
        "topic": "logging/alarm/INFO",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 910,
        "y": 600,
        "wires": []
    },
    {
        "id": "7270f041720dff44",
        "type": "catch",
        "z": "351987a7606fd47b",
        "name": "Catch Thresholds Not Exist In Redis",
        "scope": [
            "b2f99f74ec65a6c2",
            "d2a430e274858b58",
            "f492a301f0cfb58c",
            "1c98979d5bc0ee0c",
            "082c0cad2d46fbb3"
        ],
        "uncaught": false,
        "x": 160,
        "y": 1340,
        "wires": [
            [
                "375c9dc735a4fe3e"
            ]
        ]
    },
    {
        "id": "6e3a7b6576e55c82",
        "type": "file in",
        "z": "351987a7606fd47b",
        "name": "Load thresholds.json",
        "filename": "server/config/thresholds.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 400,
        "y": 1460,
        "wires": [
            [
                "72dcb8bc98c7b222"
            ]
        ]
    },
    {
        "id": "a9b2eac347b403f6",
        "type": "redis-command",
        "z": "351987a7606fd47b",
        "server": "ef790b5f.ecc138",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 640,
        "y": 1640,
        "wires": [
            [
                "bb55a9b5d89e2f29"
            ]
        ]
    },
    {
        "id": "bb55a9b5d89e2f29",
        "type": "debug",
        "z": "351987a7606fd47b",
        "name": "Error Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1620,
        "wires": []
    },
    {
        "id": "72dcb8bc98c7b222",
        "type": "json",
        "z": "351987a7606fd47b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 490,
        "y": 1520,
        "wires": [
            [
                "0213d0d83d36c578"
            ]
        ]
    },
    {
        "id": "375c9dc735a4fe3e",
        "type": "delay",
        "z": "351987a7606fd47b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 1400,
        "wires": [
            [
                "6e3a7b6576e55c82"
            ]
        ]
    },
    {
        "id": "0213d0d83d36c578",
        "type": "function",
        "z": "351987a7606fd47b",
        "name": "",
        "func": "msg.topic = 'sensors:alarms:thresholds'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1580,
        "wires": [
            [
                "a9b2eac347b403f6",
                "bb55a9b5d89e2f29"
            ]
        ]
    },
    {
        "id": "1aa0a1c1f1fc3a45",
        "type": "IND OD out",
        "z": "967a3cb71bb32019",
        "name": "",
        "stack": "0",
        "channel": "1",
        "payload": "payload",
        "payloadType": "msg",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "872c2b11de16d4fd"
            ]
        ]
    },
    {
        "id": "fadc5b3f59e9c7dd",
        "type": "debug",
        "z": "967a3cb71bb32019",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 340,
        "wires": []
    },
    {
        "id": "65abcbdb81e80c4d",
        "type": "mqtt in",
        "z": "967a3cb71bb32019",
        "name": "",
        "topic": "pdu/power/state",
        "qos": "1",
        "datatype": "auto",
        "broker": "5a051fab.6f842",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 260,
        "wires": [
            [
                "6227246408eb4c62"
            ]
        ]
    },
    {
        "id": "6227246408eb4c62",
        "type": "function",
        "z": "967a3cb71bb32019",
        "name": "",
        "func": "if (parseInt(msg.payload) == 2) {\n    msg.payload = true\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 260,
        "wires": [
            [
                "33ba6f64468fc241",
                "ec84b5a0f389d8ac"
            ]
        ]
    },
    {
        "id": "872c2b11de16d4fd",
        "type": "function",
        "z": "967a3cb71bb32019",
        "name": "",
        "func": "if (msg.payload == true) {\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 300,
        "wires": [
            [
                "fadc5b3f59e9c7dd",
                "42a43b4b87373a68",
                "a6542c52bfce95f2"
            ]
        ]
    },
    {
        "id": "a6542c52bfce95f2",
        "type": "delay",
        "z": "967a3cb71bb32019",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "505f6e513852098f"
            ]
        ]
    },
    {
        "id": "505f6e513852098f",
        "type": "function",
        "z": "967a3cb71bb32019",
        "name": "",
        "func": "if (msg.payload == true) {\n    msg.payload = false\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 300,
        "wires": [
            [
                "f4aaa7cf850e057f"
            ]
        ]
    },
    {
        "id": "a58660b5d9e78db1",
        "type": "IND OD out",
        "z": "967a3cb71bb32019",
        "name": "",
        "stack": "0",
        "channel": "1",
        "payload": "payload",
        "payloadType": "msg",
        "x": 610,
        "y": 380,
        "wires": [
            [
                "c669b8d4f07f46a6"
            ]
        ]
    },
    {
        "id": "33ba6f64468fc241",
        "type": "8relind",
        "z": "967a3cb71bb32019",
        "name": "",
        "stack": "0",
        "relay": "1",
        "payload": "payload",
        "payloadType": "msg",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "872c2b11de16d4fd"
            ]
        ]
    },
    {
        "id": "f4aaa7cf850e057f",
        "type": "8relind",
        "z": "967a3cb71bb32019",
        "name": "",
        "stack": "0",
        "relay": "1",
        "payload": "payload",
        "payloadType": "msg",
        "x": 630,
        "y": 340,
        "wires": [
            [
                "c669b8d4f07f46a6"
            ]
        ]
    },
    {
        "id": "ade6a8631cdf7da4",
        "type": "mqtt out",
        "z": "967a3cb71bb32019",
        "name": "",
        "topic": "pdu/power/state",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 420,
        "y": 100,
        "wires": []
    },
    {
        "id": "659b570a732ceced",
        "type": "inject",
        "z": "967a3cb71bb32019",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "794be10b6fdb2d16"
            ]
        ]
    },
    {
        "id": "794be10b6fdb2d16",
        "type": "function",
        "z": "967a3cb71bb32019",
        "name": "",
        "func": "msg.payload = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 100,
        "wires": [
            [
                "ade6a8631cdf7da4"
            ]
        ]
    },
    {
        "id": "1c64dfe02f054c94",
        "type": "comment",
        "z": "967a3cb71bb32019",
        "name": "Test Trip Breaker",
        "info": "",
        "x": 100,
        "y": 60,
        "wires": []
    },
    {
        "id": "c669b8d4f07f46a6",
        "type": "debug",
        "z": "967a3cb71bb32019",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "42a43b4b87373a68",
        "type": "function",
        "z": "967a3cb71bb32019",
        "name": "set topic",
        "func": "if (msg.payload == true) {\n    msg.payload = 2\n}\n\nnewMsg ={payload: msg.payload};\nnewMsg.payload = [\n    \"pdu:power:state\",\n    newMsg.payload\n]\nreturn newMsg;\n\n// return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "7dbca62f499643ac",
                "078bc6cc25c59df6"
            ]
        ]
    },
    {
        "id": "6ce8fc21812413e5",
        "type": "debug",
        "z": "967a3cb71bb32019",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 220,
        "wires": []
    },
    {
        "id": "078bc6cc25c59df6",
        "type": "redis-command",
        "z": "967a3cb71bb32019",
        "server": "ef790b5f.ecc138",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 540,
        "y": 220,
        "wires": [
            [
                "6ce8fc21812413e5"
            ]
        ]
    },
    {
        "id": "7dbca62f499643ac",
        "type": "debug",
        "z": "967a3cb71bb32019",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "ec84b5a0f389d8ac",
        "type": "function",
        "z": "967a3cb71bb32019",
        "name": "",
        "func": "msg.payload = JSON.stringify({\n    priority: \"info\",\n    applicaiton: \"node-red\",\n    message: \"Breaker Tripped\"\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 220,
        "wires": [
            [
                "e49c42e040ebcfa1"
            ]
        ]
    },
    {
        "id": "e49c42e040ebcfa1",
        "type": "mqtt out",
        "z": "967a3cb71bb32019",
        "name": "",
        "topic": "logging/alarm/INFO",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 270,
        "y": 220,
        "wires": []
    },
    {
        "id": "5106f6f3d170a9ec",
        "type": "mqtt out",
        "z": "71168aa934c4b91e",
        "name": "",
        "topic": "logging/alarm/INFO",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "e62b3158b42bfdf4",
        "type": "inject",
        "z": "71168aa934c4b91e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "ac22668d4aa03a5a"
            ]
        ]
    },
    {
        "id": "ac22668d4aa03a5a",
        "type": "function",
        "z": "71168aa934c4b91e",
        "name": "",
        "func": "msg.payload = JSON.stringify({\n    level: \"INFO\",\n    priority: \"critical\",\n    applicaiton: \"node-red\",\n    message: \"Broke something.. woops\"\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 80,
        "wires": [
            [
                "5106f6f3d170a9ec"
            ]
        ]
    },
    {
        "id": "93b6998ab22ee780",
        "type": "comment",
        "z": "71168aa934c4b91e",
        "name": "Logging",
        "info": "",
        "x": 70,
        "y": 120,
        "wires": []
    },
    {
        "id": "11a2fdf2da2e0a6a",
        "type": "mqtt in",
        "z": "71168aa934c4b91e",
        "name": "",
        "topic": "logging/alarm/#",
        "qos": "1",
        "datatype": "auto",
        "broker": "5a051fab.6f842",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 160,
        "wires": [
            [
                "bf00aa201488bf61"
            ]
        ]
    },
    {
        "id": "eb49bc18528f5c4e",
        "type": "file",
        "z": "71168aa934c4b91e",
        "name": "",
        "filename": "logs/alarm.log",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 580,
        "y": 160,
        "wires": [
            [
                "5bc0cc62117713d7"
            ]
        ]
    },
    {
        "id": "5bc0cc62117713d7",
        "type": "debug",
        "z": "71168aa934c4b91e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 160,
        "wires": []
    },
    {
        "id": "bf00aa201488bf61",
        "type": "function",
        "z": "71168aa934c4b91e",
        "name": "",
        "func": "\nconst timeStamp = { timestamp: Date.now() }\nconst newPayload = Object.assign(timeStamp, JSON.parse(msg.payload))\nmsg.payload = JSON.stringify(newPayload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "eb49bc18528f5c4e",
                "b4aa13b3834415b7"
            ]
        ]
    },
    {
        "id": "fbcd56a4fe97b154",
        "type": "comment",
        "z": "71168aa934c4b91e",
        "name": "Test Logging ALARM",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "b4aa13b3834415b7",
        "type": "exec",
        "z": "71168aa934c4b91e",
        "command": "logger -t \"ALARM\" ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "3",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "ba66a5d4986fe541"
            ],
            [
                "ba66a5d4986fe541"
            ],
            []
        ]
    },
    {
        "id": "ba66a5d4986fe541",
        "type": "debug",
        "z": "71168aa934c4b91e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 220,
        "wires": []
    },
    {
        "id": "abbd42279eb13da9",
        "type": "comment",
        "z": "71168aa934c4b91e",
        "name": "Logging",
        "info": "",
        "x": 70,
        "y": 320,
        "wires": []
    },
    {
        "id": "7fc5e10376587020",
        "type": "mqtt in",
        "z": "71168aa934c4b91e",
        "name": "",
        "topic": "logging/audit/#",
        "qos": "1",
        "datatype": "auto",
        "broker": "5a051fab.6f842",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 360,
        "wires": [
            [
                "a5e257a188733d9b"
            ]
        ]
    },
    {
        "id": "078be84df437712e",
        "type": "file",
        "z": "71168aa934c4b91e",
        "name": "",
        "filename": "logs/audit.log",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 530,
        "y": 360,
        "wires": [
            [
                "8b92ebbff41eedee"
            ]
        ]
    },
    {
        "id": "8b92ebbff41eedee",
        "type": "debug",
        "z": "71168aa934c4b91e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "a5e257a188733d9b",
        "type": "function",
        "z": "71168aa934c4b91e",
        "name": "",
        "func": "\nconst timeStamp = { timestamp: Date.now() }\nconst newPayload = Object.assign(timeStamp, JSON.parse(msg.payload))\nmsg.payload = JSON.stringify(newPayload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 360,
        "wires": [
            [
                "078be84df437712e",
                "ad8f830b2c933af2"
            ]
        ]
    },
    {
        "id": "ad8f830b2c933af2",
        "type": "exec",
        "z": "71168aa934c4b91e",
        "command": "logger -t \"AUDIT\" ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "3",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 470,
        "y": 420,
        "wires": [
            [
                "3f9246e2f7b04902"
            ],
            [
                "3f9246e2f7b04902"
            ],
            []
        ]
    },
    {
        "id": "3f9246e2f7b04902",
        "type": "debug",
        "z": "71168aa934c4b91e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 420,
        "wires": []
    },
    {
        "id": "19b47870e60f7c02",
        "type": "comment",
        "z": "71168aa934c4b91e",
        "name": "Logging",
        "info": "",
        "x": 70,
        "y": 540,
        "wires": []
    },
    {
        "id": "2f89d791522bdb3d",
        "type": "mqtt in",
        "z": "71168aa934c4b91e",
        "name": "",
        "topic": "logging/security/#",
        "qos": "1",
        "datatype": "auto",
        "broker": "5a051fab.6f842",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 580,
        "wires": [
            [
                "0f5d3b17ef61dc23"
            ]
        ]
    },
    {
        "id": "cf85e077af54206c",
        "type": "file",
        "z": "71168aa934c4b91e",
        "name": "",
        "filename": "logs/security.log",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 500,
        "y": 580,
        "wires": [
            [
                "c47a1710e3b8f48f"
            ]
        ]
    },
    {
        "id": "c47a1710e3b8f48f",
        "type": "debug",
        "z": "71168aa934c4b91e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 580,
        "wires": []
    },
    {
        "id": "0f5d3b17ef61dc23",
        "type": "function",
        "z": "71168aa934c4b91e",
        "name": "",
        "func": "\nconst timeStamp = { timestamp: Date.now() }\nconst newPayload = Object.assign(timeStamp, JSON.parse(msg.payload))\nmsg.payload = JSON.stringify(newPayload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 580,
        "wires": [
            [
                "cf85e077af54206c",
                "4e5cfa4dac28eda9"
            ]
        ]
    },
    {
        "id": "4e5cfa4dac28eda9",
        "type": "exec",
        "z": "71168aa934c4b91e",
        "command": "logger -t \"SECURITY\" ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "3",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 640,
        "wires": [
            [
                "f7f2407f5f5d81ab"
            ],
            [
                "f7f2407f5f5d81ab"
            ],
            []
        ]
    },
    {
        "id": "f7f2407f5f5d81ab",
        "type": "debug",
        "z": "71168aa934c4b91e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 640,
        "wires": []
    },
    {
        "id": "66cb4cfc79f8df0b",
        "type": "comment",
        "z": "71168aa934c4b91e",
        "name": "Logging",
        "info": "",
        "x": 70,
        "y": 760,
        "wires": []
    },
    {
        "id": "190abe4c57a0c87e",
        "type": "mqtt in",
        "z": "71168aa934c4b91e",
        "name": "",
        "topic": "logging/error/#",
        "qos": "1",
        "datatype": "auto",
        "broker": "5a051fab.6f842",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 800,
        "wires": [
            [
                "af0fccb48d71de10"
            ]
        ]
    },
    {
        "id": "144dd5838ed2c646",
        "type": "file",
        "z": "71168aa934c4b91e",
        "name": "",
        "filename": "logs/error.log",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 470,
        "y": 800,
        "wires": [
            [
                "7929c40aa8bf3799"
            ]
        ]
    },
    {
        "id": "7929c40aa8bf3799",
        "type": "debug",
        "z": "71168aa934c4b91e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 800,
        "wires": []
    },
    {
        "id": "af0fccb48d71de10",
        "type": "function",
        "z": "71168aa934c4b91e",
        "name": "",
        "func": "\nconst timeStamp = { timestamp: Date.now() }\nconst newPayload = Object.assign(timeStamp, JSON.parse(msg.payload))\nmsg.payload = JSON.stringify(newPayload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 800,
        "wires": [
            [
                "144dd5838ed2c646",
                "52565131bafb35a0"
            ]
        ]
    },
    {
        "id": "52565131bafb35a0",
        "type": "exec",
        "z": "71168aa934c4b91e",
        "command": "logger -t \"ERROR\"",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "3",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 860,
        "wires": [
            [
                "a1fda11a3850b16c"
            ],
            [
                "a1fda11a3850b16c"
            ],
            []
        ]
    },
    {
        "id": "a1fda11a3850b16c",
        "type": "debug",
        "z": "71168aa934c4b91e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 860,
        "wires": []
    },
    {
        "id": "9e2de4789653d1e4",
        "type": "mqtt out",
        "z": "71168aa934c4b91e",
        "name": "",
        "topic": "logging/audit/INFO",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 430,
        "y": 280,
        "wires": []
    },
    {
        "id": "7d65f3180f83caa1",
        "type": "inject",
        "z": "71168aa934c4b91e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 280,
        "wires": [
            [
                "2b5af1deecc8dcf9"
            ]
        ]
    },
    {
        "id": "2b5af1deecc8dcf9",
        "type": "function",
        "z": "71168aa934c4b91e",
        "name": "",
        "func": "msg.payload = JSON.stringify({\n    level: \"WARN\",\n    priority: \"major\",\n    applicaiton: \"node-red\",\n    message: \"This is a test audit log\"\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 280,
        "wires": [
            [
                "9e2de4789653d1e4"
            ]
        ]
    },
    {
        "id": "6112979855ca14f5",
        "type": "comment",
        "z": "71168aa934c4b91e",
        "name": "Test Logging AUDIT",
        "info": "",
        "x": 110,
        "y": 240,
        "wires": []
    },
    {
        "id": "f2532dfa60cbd39f",
        "type": "comment",
        "z": "71168aa934c4b91e",
        "name": "Test Logging ERROR",
        "info": "",
        "x": 120,
        "y": 680,
        "wires": []
    },
    {
        "id": "b208cc228a4898a8",
        "type": "inject",
        "z": "71168aa934c4b91e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 720,
        "wires": [
            [
                "353f810150627ea1"
            ]
        ]
    },
    {
        "id": "353f810150627ea1",
        "type": "function",
        "z": "71168aa934c4b91e",
        "name": "",
        "func": "msg.payload = JSON.stringify({\n    level: \"FATAL\",\n    priority: 'critical',\n    applicaiton: \"node-red\",\n    message: \"This is an error log\"\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 720,
        "wires": [
            [
                "6cbb08f0f29fe8e4"
            ]
        ]
    },
    {
        "id": "6cbb08f0f29fe8e4",
        "type": "mqtt out",
        "z": "71168aa934c4b91e",
        "name": "",
        "topic": "logging/error/INFO",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 430,
        "y": 720,
        "wires": []
    },
    {
        "id": "cf53fdf79e68a051",
        "type": "comment",
        "z": "71168aa934c4b91e",
        "name": "Test Logging SECURITY",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "10de56180b24ebd5",
        "type": "inject",
        "z": "71168aa934c4b91e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 500,
        "wires": [
            [
                "f9e12882137031b7"
            ]
        ]
    },
    {
        "id": "f9e12882137031b7",
        "type": "function",
        "z": "71168aa934c4b91e",
        "name": "",
        "func": "msg.payload = JSON.stringify({\n    level: \"INFO\",\n    priority: \"low\",\n    applicaiton: \"node-red\",\n    message: \"This is a security log\"\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 500,
        "wires": [
            [
                "bde66011f76e9ce2"
            ]
        ]
    },
    {
        "id": "bde66011f76e9ce2",
        "type": "mqtt out",
        "z": "71168aa934c4b91e",
        "name": "",
        "topic": "logging/security/INFO",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5a051fab.6f842",
        "x": 440,
        "y": 500,
        "wires": []
    },
    {
        "id": "276de4fec33fab8d",
        "type": "inject",
        "z": "c3a08c57ae26863e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "f731609ec78d4ffe",
                "18948ff8aefeb2b6"
            ]
        ]
    },
    {
        "id": "f731609ec78d4ffe",
        "type": "function",
        "z": "c3a08c57ae26863e",
        "name": "",
        "func": "msg.payload = \"megaind 0 wdtr\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 100,
        "wires": [
            [
                "f635639172e362ab"
            ]
        ]
    },
    {
        "id": "b5ac733f2710ea09",
        "type": "comment",
        "z": "c3a08c57ae26863e",
        "name": "Pet the Dog here",
        "info": "",
        "x": 220,
        "y": 40,
        "wires": []
    },
    {
        "id": "18948ff8aefeb2b6",
        "type": "function",
        "z": "c3a08c57ae26863e",
        "name": "",
        "func": "msg.payload = \"rtd 0 wdtr\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 160,
        "wires": [
            [
                "03646f65215bd066"
            ]
        ]
    },
    {
        "id": "03646f65215bd066",
        "type": "debug",
        "z": "c3a08c57ae26863e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 140,
        "wires": []
    },
    {
        "id": "f635639172e362ab",
        "type": "exec",
        "z": "c3a08c57ae26863e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "SM IA WD pet here",
        "x": 590,
        "y": 100,
        "wires": [
            [],
            [
                "03646f65215bd066"
            ],
            [
                "03646f65215bd066"
            ]
        ]
    },
    {
        "id": "74d5a513c6ee3793",
        "type": "exec",
        "z": "c3a08c57ae26863e",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "SM RTD WD pet here",
        "x": 600,
        "y": 160,
        "wires": [
            [],
            [],
            [
                "03646f65215bd066"
            ]
        ]
    }
]